
program.debug.elf:     file format elf32-littleriscv


Disassembly of section .text:

00000000 <crt>:

.global crt
.section .text.prologue, "ax"
.align 4
crt:
	nop
   0:	00000013          	addi	x0,x0,0
	la ra, exit
   4:	00000097          	auipc	x1,0x0
   8:	09c08093          	addi	x1,x1,156 # a0 <exit>
	la sp, _sp
   c:	00010117          	auipc	x2,0x10
  10:	ff410113          	addi	x2,x2,-12 # 10000 <_sp>
	mv s0, sp
  14:	00010413          	addi	x8,x2,0
	la gp, __global_pointer$
  18:	00001197          	auipc	x3,0x1
  1c:	0a818193          	addi	x3,x3,168 # 10c0 <__global_pointer$>
	li tp, 0
  20:	00000213          	addi	x4,x0,0
	li t0, 0
  24:	00000293          	addi	x5,x0,0
	li t1, 0
  28:	00000313          	addi	x6,x0,0
	li t2, 0
  2c:	00000393          	addi	x7,x0,0
	li s1, 0
  30:	00000493          	addi	x9,x0,0
	li a0, 0
  34:	00000513          	addi	x10,x0,0
	li a1, 0
  38:	00000593          	addi	x11,x0,0
	li a2, 0
  3c:	00000613          	addi	x12,x0,0
	li a3, 0
  40:	00000693          	addi	x13,x0,0
	li a4, 0
  44:	00000713          	addi	x14,x0,0
	li a5, 0
  48:	00000793          	addi	x15,x0,0
	li a6, 0
  4c:	00000813          	addi	x16,x0,0
	li a7, 0
  50:	00000893          	addi	x17,x0,0
	li s2, 0
  54:	00000913          	addi	x18,x0,0
	li s3, 0
  58:	00000993          	addi	x19,x0,0
	li s4, 0
  5c:	00000a13          	addi	x20,x0,0
	li s5, 0
  60:	00000a93          	addi	x21,x0,0
	li s6, 0
  64:	00000b13          	addi	x22,x0,0
	li s7, 0
  68:	00000b93          	addi	x23,x0,0
	li s8, 0
  6c:	00000c13          	addi	x24,x0,0
	li s9, 0
  70:	00000c93          	addi	x25,x0,0
	li s10, 0
  74:	00000d13          	addi	x26,x0,0
	li s11, 0
  78:	00000d93          	addi	x27,x0,0
	li t3, 0
  7c:	00000e13          	addi	x28,x0,0
	li t4, 0
  80:	00000e93          	addi	x29,x0,0
	li t5, 0
  84:	00000f13          	addi	x30,x0,0
	li t6, 0
  88:	00000f93          	addi	x31,x0,0
	j main
  8c:	21c0006f          	jal	x0,2a8 <main>
	...

000000a0 <exit>:

.global exit
.section .text
.align 4
exit:
	la sp, _sp
  a0:	00010117          	auipc	x2,0x10
  a4:	f6010113          	addi	x2,x2,-160 # 10000 <_sp>
	sw a0, -8(sp)
  a8:	fea12c23          	sw	x10,-8(x2)
	nop
  ac:	00000013          	addi	x0,x0,0
	wfi
  b0:	10500073          	wfi

000000b4 <bubble>:
#endif
#include <stdlib.h>
#define N 99

//bubble sort
void bubble(int arr[], int size) {
  b4:	fd010113          	addi	x2,x2,-48
  b8:	02812623          	sw	x8,44(x2)
  bc:	03010413          	addi	x8,x2,48
  c0:	fca42e23          	sw	x10,-36(x8)
  c4:	fcb42c23          	sw	x11,-40(x8)

	for(int i = 0; i < (size-1); i++)
  c8:	fe042623          	sw	x0,-20(x8)
  cc:	0bc0006f          	jal	x0,188 <bubble+0xd4>
		for(int j = i+1; j< size; j++)
  d0:	fec42783          	lw	x15,-20(x8)
  d4:	00178793          	addi	x15,x15,1
  d8:	fef42423          	sw	x15,-24(x8)
  dc:	0940006f          	jal	x0,170 <bubble+0xbc>
			if(arr[j] < arr[i]){
  e0:	fe842783          	lw	x15,-24(x8)
  e4:	00279793          	slli	x15,x15,0x2
  e8:	fdc42703          	lw	x14,-36(x8)
  ec:	00f707b3          	add	x15,x14,x15
  f0:	0007a703          	lw	x14,0(x15)
  f4:	fec42783          	lw	x15,-20(x8)
  f8:	00279793          	slli	x15,x15,0x2
  fc:	fdc42683          	lw	x13,-36(x8)
 100:	00f687b3          	add	x15,x13,x15
 104:	0007a783          	lw	x15,0(x15)
 108:	04f75e63          	bge	x14,x15,164 <bubble+0xb0>
				int temp = arr[j];
 10c:	fe842783          	lw	x15,-24(x8)
 110:	00279793          	slli	x15,x15,0x2
 114:	fdc42703          	lw	x14,-36(x8)
 118:	00f707b3          	add	x15,x14,x15
 11c:	0007a783          	lw	x15,0(x15)
 120:	fef42223          	sw	x15,-28(x8)
				arr[j] = arr[i];
 124:	fec42783          	lw	x15,-20(x8)
 128:	00279793          	slli	x15,x15,0x2
 12c:	fdc42703          	lw	x14,-36(x8)
 130:	00f70733          	add	x14,x14,x15
 134:	fe842783          	lw	x15,-24(x8)
 138:	00279793          	slli	x15,x15,0x2
 13c:	fdc42683          	lw	x13,-36(x8)
 140:	00f687b3          	add	x15,x13,x15
 144:	00072703          	lw	x14,0(x14)
 148:	00e7a023          	sw	x14,0(x15)
				arr[i] = temp;
 14c:	fec42783          	lw	x15,-20(x8)
 150:	00279793          	slli	x15,x15,0x2
 154:	fdc42703          	lw	x14,-36(x8)
 158:	00f707b3          	add	x15,x14,x15
 15c:	fe442703          	lw	x14,-28(x8)
 160:	00e7a023          	sw	x14,0(x15)
		for(int j = i+1; j< size; j++)
 164:	fe842783          	lw	x15,-24(x8)
 168:	00178793          	addi	x15,x15,1
 16c:	fef42423          	sw	x15,-24(x8)
 170:	fe842703          	lw	x14,-24(x8)
 174:	fd842783          	lw	x15,-40(x8)
 178:	f6f744e3          	blt	x14,x15,e0 <bubble+0x2c>
	for(int i = 0; i < (size-1); i++)
 17c:	fec42783          	lw	x15,-20(x8)
 180:	00178793          	addi	x15,x15,1
 184:	fef42623          	sw	x15,-20(x8)
 188:	fd842783          	lw	x15,-40(x8)
 18c:	fff78793          	addi	x15,x15,-1
 190:	fec42703          	lw	x14,-20(x8)
 194:	f2f74ee3          	blt	x14,x15,d0 <bubble+0x1c>
			}
}
 198:	00000013          	addi	x0,x0,0
 19c:	00000013          	addi	x0,x0,0
 1a0:	02c12403          	lw	x8,44(x2)
 1a4:	03010113          	addi	x2,x2,48
 1a8:	00008067          	jalr	x0,0(x1)

000001ac <binarySearch>:

// A recursive binary search function. It returns 
// location of x in given array arr[l..r] is present, 
// otherwise -1 
int binarySearch(int arr[], int l, int r, int x) { 
 1ac:	fd010113          	addi	x2,x2,-48
 1b0:	02112623          	sw	x1,44(x2)
 1b4:	02812423          	sw	x8,40(x2)
 1b8:	03010413          	addi	x8,x2,48
 1bc:	fca42e23          	sw	x10,-36(x8)
 1c0:	fcb42c23          	sw	x11,-40(x8)
 1c4:	fcc42a23          	sw	x12,-44(x8)
 1c8:	fcd42823          	sw	x13,-48(x8)
	if (r >= l) { 
 1cc:	fd442703          	lw	x14,-44(x8)
 1d0:	fd842783          	lw	x15,-40(x8)
 1d4:	0af74e63          	blt	x14,x15,290 <binarySearch+0xe4>
		int mid = l + (r - l) / 2; 
 1d8:	fd442703          	lw	x14,-44(x8)
 1dc:	fd842783          	lw	x15,-40(x8)
 1e0:	40f707b3          	sub	x15,x14,x15
 1e4:	01f7d713          	srli	x14,x15,0x1f
 1e8:	00f707b3          	add	x15,x14,x15
 1ec:	4017d793          	srai	x15,x15,0x1
 1f0:	00078713          	addi	x14,x15,0
 1f4:	fd842783          	lw	x15,-40(x8)
 1f8:	00e787b3          	add	x15,x15,x14
 1fc:	fef42623          	sw	x15,-20(x8)
  
		// If the element is present at the middle 
		// itself 
		if (arr[mid] == x) 
 200:	fec42783          	lw	x15,-20(x8)
 204:	00279793          	slli	x15,x15,0x2
 208:	fdc42703          	lw	x14,-36(x8)
 20c:	00f707b3          	add	x15,x14,x15
 210:	0007a783          	lw	x15,0(x15)
 214:	fd042703          	lw	x14,-48(x8)
 218:	00f71663          	bne	x14,x15,224 <binarySearch+0x78>
			return mid; 
 21c:	fec42783          	lw	x15,-20(x8)
 220:	0740006f          	jal	x0,294 <binarySearch+0xe8>
  
		// If element is smaller than mid, then 
		// it can only be present in left subarray 
		if (arr[mid] > x) 
 224:	fec42783          	lw	x15,-20(x8)
 228:	00279793          	slli	x15,x15,0x2
 22c:	fdc42703          	lw	x14,-36(x8)
 230:	00f707b3          	add	x15,x14,x15
 234:	0007a783          	lw	x15,0(x15)
 238:	fd042703          	lw	x14,-48(x8)
 23c:	02f75663          	bge	x14,x15,268 <binarySearch+0xbc>
			return binarySearch(arr, l, mid - 1, x); 
 240:	fec42783          	lw	x15,-20(x8)
 244:	fff78793          	addi	x15,x15,-1
 248:	fd042683          	lw	x13,-48(x8)
 24c:	00078613          	addi	x12,x15,0
 250:	fd842583          	lw	x11,-40(x8)
 254:	fdc42503          	lw	x10,-36(x8)
 258:	00000097          	auipc	x1,0x0
 25c:	f54080e7          	jalr	x1,-172(x1) # 1ac <binarySearch>
 260:	00050793          	addi	x15,x10,0
 264:	0300006f          	jal	x0,294 <binarySearch+0xe8>
  
		// Else the element can only be present 
		// in right subarray 
		return binarySearch(arr, mid + 1, r, x); 
 268:	fec42783          	lw	x15,-20(x8)
 26c:	00178793          	addi	x15,x15,1
 270:	fd042683          	lw	x13,-48(x8)
 274:	fd442603          	lw	x12,-44(x8)
 278:	00078593          	addi	x11,x15,0
 27c:	fdc42503          	lw	x10,-36(x8)
 280:	00000097          	auipc	x1,0x0
 284:	f2c080e7          	jalr	x1,-212(x1) # 1ac <binarySearch>
 288:	00050793          	addi	x15,x10,0
 28c:	0080006f          	jal	x0,294 <binarySearch+0xe8>
	} 
  
	// We reach here when element is not 
	// present in array 
	return -1; 
 290:	fff00793          	addi	x15,x0,-1
} 
 294:	00078513          	addi	x10,x15,0
 298:	02c12083          	lw	x1,44(x2)
 29c:	02812403          	lw	x8,40(x2)
 2a0:	03010113          	addi	x2,x2,48
 2a4:	00008067          	jalr	x0,0(x1)

000002a8 <main>:
  
int main(void) { 
 2a8:	e4010113          	addi	x2,x2,-448
 2ac:	1a112e23          	sw	x1,444(x2)
 2b0:	1a812c23          	sw	x8,440(x2)
 2b4:	1c010413          	addi	x8,x2,448
	
	int arr[N]; 
	for (int i = 0; i < N; ++i)
 2b8:	fe042623          	sw	x0,-20(x8)
 2bc:	0340006f          	jal	x0,2f0 <main+0x48>
		arr[i] = rand() & (31);
 2c0:	00000097          	auipc	x1,0x0
 2c4:	124080e7          	jalr	x1,292(x1) # 3e4 <rand>
 2c8:	00050793          	addi	x15,x10,0
 2cc:	01f7f713          	andi	x14,x15,31
 2d0:	fec42783          	lw	x15,-20(x8)
 2d4:	00279793          	slli	x15,x15,0x2
 2d8:	ff040693          	addi	x13,x8,-16
 2dc:	00f687b3          	add	x15,x13,x15
 2e0:	e4e7ac23          	sw	x14,-424(x15)
	for (int i = 0; i < N; ++i)
 2e4:	fec42783          	lw	x15,-20(x8)
 2e8:	00178793          	addi	x15,x15,1
 2ec:	fef42623          	sw	x15,-20(x8)
 2f0:	fec42703          	lw	x14,-20(x8)
 2f4:	06200793          	addi	x15,x0,98
 2f8:	fce7d4e3          	bge	x15,x14,2c0 <main+0x18>

	int x = 10;
 2fc:	00a00793          	addi	x15,x0,10
 300:	fef42423          	sw	x15,-24(x8)
	bubble(arr, N);
 304:	e4840793          	addi	x15,x8,-440
 308:	06300593          	addi	x11,x0,99
 30c:	00078513          	addi	x10,x15,0
 310:	00000097          	auipc	x1,0x0
 314:	da4080e7          	jalr	x1,-604(x1) # b4 <bubble>
	int result = binarySearch(arr, 0, N-1, x);
 318:	e4840793          	addi	x15,x8,-440
 31c:	fe842683          	lw	x13,-24(x8)
 320:	06200613          	addi	x12,x0,98
 324:	00000593          	addi	x11,x0,0
 328:	00078513          	addi	x10,x15,0
 32c:	00000097          	auipc	x1,0x0
 330:	e80080e7          	jalr	x1,-384(x1) # 1ac <binarySearch>
 334:	fea42223          	sw	x10,-28(x8)
	int another_result = binarySearch(arr, 0, N-1,420);
 338:	e4840793          	addi	x15,x8,-440
 33c:	1a400693          	addi	x13,x0,420
 340:	06200613          	addi	x12,x0,98
 344:	00000593          	addi	x11,x0,0
 348:	00078513          	addi	x10,x15,0
 34c:	00000097          	auipc	x1,0x0
 350:	e60080e7          	jalr	x1,-416(x1) # 1ac <binarySearch>
 354:	fea42023          	sw	x10,-32(x8)
	int larry = binarySearch(arr, 0, N-1,33); //larry
 358:	e4840793          	addi	x15,x8,-440
 35c:	02100693          	addi	x13,x0,33
 360:	06200613          	addi	x12,x0,98
 364:	00000593          	addi	x11,x0,0
 368:	00078513          	addi	x10,x15,0
 36c:	00000097          	auipc	x1,0x0
 370:	e40080e7          	jalr	x1,-448(x1) # 1ac <binarySearch>
 374:	fca42e23          	sw	x10,-36(x8)
	int goat = binarySearch(arr, 0, N-1,23); //mj or l3-6
 378:	e4840793          	addi	x15,x8,-440
 37c:	01700693          	addi	x13,x0,23
 380:	06200613          	addi	x12,x0,98
 384:	00000593          	addi	x11,x0,0
 388:	00078513          	addi	x10,x15,0
 38c:	00000097          	auipc	x1,0x0
 390:	e20080e7          	jalr	x1,-480(x1) # 1ac <binarySearch>
 394:	fca42c23          	sw	x10,-40(x8)
	int brady = binarySearch(arr, 0, N-1,12);
 398:	e4840793          	addi	x15,x8,-440
 39c:	00c00693          	addi	x13,x0,12
 3a0:	06200613          	addi	x12,x0,98
 3a4:	00000593          	addi	x11,x0,0
 3a8:	00078513          	addi	x10,x15,0
 3ac:	00000097          	auipc	x1,0x0
 3b0:	e00080e7          	jalr	x1,-512(x1) # 1ac <binarySearch>
 3b4:	fca42a23          	sw	x10,-44(x8)



	return 0; 
 3b8:	00000793          	addi	x15,x0,0
} 
 3bc:	00078513          	addi	x10,x15,0
 3c0:	1bc12083          	lw	x1,444(x2)
 3c4:	1b812403          	lw	x8,440(x2)
 3c8:	1c010113          	addi	x2,x2,448
 3cc:	00008067          	jalr	x0,0(x1)

000003d0 <srand>:
 3d0:	000017b7          	lui	x15,0x1
 3d4:	8e07a783          	lw	x15,-1824(x15) # 8e0 <_impure_ptr>
 3d8:	0aa7a423          	sw	x10,168(x15)
 3dc:	0a07a623          	sw	x0,172(x15)
 3e0:	00008067          	jalr	x0,0(x1)

000003e4 <rand>:
 3e4:	000017b7          	lui	x15,0x1
 3e8:	8e07a803          	lw	x16,-1824(x15) # 8e0 <_impure_ptr>
 3ec:	4c9585b7          	lui	x11,0x4c958
 3f0:	f2d58593          	addi	x11,x11,-211 # 4c957f2d <_sp+0x4c947f2d>
 3f4:	0a882683          	lw	x13,168(x16)
 3f8:	0ac82703          	lw	x14,172(x16)
 3fc:	02b687b3          	mul	x15,x13,x11
 400:	00178613          	addi	x12,x15,1
 404:	00f637b3          	sltu	x15,x12,x15
 408:	0ac82423          	sw	x12,168(x16)
 40c:	5851f637          	lui	x12,0x5851f
 410:	42d60613          	addi	x12,x12,1069 # 5851f42d <_sp+0x5850f42d>
 414:	02c68633          	mul	x12,x13,x12
 418:	02b70733          	mul	x14,x14,x11
 41c:	02b6b6b3          	mulhu	x13,x13,x11
 420:	00c70733          	add	x14,x14,x12
 424:	00d70733          	add	x14,x14,x13
 428:	00e787b3          	add	x15,x15,x14
 42c:	00179513          	slli	x10,x15,0x1
 430:	0af82623          	sw	x15,172(x16)
 434:	00155513          	srli	x10,x10,0x1
 438:	00008067          	jalr	x0,0(x1)
	...

Disassembly of section .data:

000004a0 <impure_data>:
 4a0:	0000                	c.unimp
 4a2:	0000                	c.unimp
 4a4:	078c                	c.addi4spn	x11,x2,960
 4a6:	0000                	c.unimp
 4a8:	07f4                	c.addi4spn	x13,x2,972
 4aa:	0000                	c.unimp
 4ac:	085c                	c.addi4spn	x15,x2,20
	...
 546:	0000                	c.unimp
 548:	0001                	c.addi	x0,0
 54a:	0000                	c.unimp
 54c:	0000                	c.unimp
 54e:	0000                	c.unimp
 550:	330e                	c.fldsp	f6,224(x2)
 552:	abcd                	c.j	b44 <_ebss+0x244>
 554:	1234                	c.addi4spn	x13,x2,296
 556:	e66d                	c.bnez	x12,640 <impure_data+0x1a0>
 558:	deec                	c.sw	x11,124(x13)
 55a:	0005                	c.addi	x0,1
 55c:	0000000b          	0xb
	...

Disassembly of section .srodata:

00000480 <_global_impure_ptr>:
 480:	04a0                	c.addi4spn	x8,x2,584
	...

Disassembly of section .sdata:

000008e0 <_impure_ptr>:
 8e0:	04a0                	c.addi4spn	x8,x2,584
	...

Disassembly of section .riscv.attributes:

00000000 <.riscv.attributes>:
	nop
   0:	2041                	c.jal	80 <crt+0x80>
   2:	0000                	c.unimp
	la ra, exit
   4:	7200                	c.flw	f8,32(x12)
   6:	7369                	c.lui	x6,0xffffa
   8:	01007663          	bgeu	x0,x16,14 <crt+0x14>
	la sp, _sp
   c:	0016                	c.slli	x0,0x5
   e:	0000                	c.unimp
  10:	1004                	c.addi4spn	x9,x2,32
  12:	7205                	c.lui	x4,0xfffe1
	mv s0, sp
  14:	3376                	c.fldsp	f6,376(x2)
  16:	6932                	c.flwsp	f18,12(x2)
	la gp, __global_pointer$
  18:	7032                	c.flwsp	f0,44(x2)
  1a:	5f30                	c.lw	x12,120(x14)
  1c:	326d                	c.jal	fffff9c6 <_sp+0xfffef9c6>
  1e:	3070                	c.fld	f12,224(x8)
	...

Disassembly of section .comment:

00000000 <.comment>:
	nop
   0:	3a434347          	fmsub.d	f6,f6,f4,f7,rmm
	la ra, exit
   4:	2820                	c.fld	f8,80(x8)
   6:	29554e47          	fmsub.s	f28,f10,f21,f5,rmm
   a:	3920                	c.fld	f8,112(x10)
	la sp, _sp
   c:	322e                	c.fldsp	f4,232(x2)
   e:	302e                	c.fldsp	f0,232(x2)
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
	nop
   0:	0114                	c.addi4spn	x13,x2,128
   2:	0000                	c.unimp
	la ra, exit
   4:	001c0003          	lb	x0,1(x24)
   8:	0000                	c.unimp
   a:	0101                	c.addi	x2,0
	la sp, _sp
   c:	000d0efb          	0xd0efb
  10:	0101                	c.addi	x2,0
  12:	0101                	c.addi	x2,0
	mv s0, sp
  14:	0000                	c.unimp
  16:	0100                	c.addi4spn	x8,x2,128
	la gp, __global_pointer$
  18:	0000                	c.unimp
  1a:	0001                	c.addi	x0,0
  1c:	2e747263          	bgeu	x8,x7,300 <main+0x58>
	li tp, 0
  20:	00000073          	ecall
	li t0, 0
  24:	0000                	c.unimp
  26:	0500                	c.addi4spn	x8,x2,640
	li t1, 0
  28:	0002                	c.slli64	x0
  2a:	0000                	c.unimp
	li t2, 0
  2c:	0300                	c.addi4spn	x8,x2,384
  2e:	010d                	c.addi	x2,3
	li s1, 0
  30:	04090103          	lb	x2,64(x18)
	li a0, 0
  34:	0100                	c.addi4spn	x8,x2,128
  36:	08090103          	lb	x2,128(x18)
	li a1, 0
  3a:	0100                	c.addi4spn	x8,x2,128
	li a2, 0
  3c:	08090103          	lb	x2,128(x18)
	li a3, 0
  40:	0100                	c.addi4spn	x8,x2,128
  42:	04090103          	lb	x2,64(x18)
	li a4, 0
  46:	0100                	c.addi4spn	x8,x2,128
	li a5, 0
  48:	08090103          	lb	x2,128(x18)
	li a6, 0
  4c:	0100                	c.addi4spn	x8,x2,128
  4e:	04090103          	lb	x2,64(x18)
	li a7, 0
  52:	0100                	c.addi4spn	x8,x2,128
	li s2, 0
  54:	04090103          	lb	x2,64(x18)
	li s3, 0
  58:	0100                	c.addi4spn	x8,x2,128
  5a:	04090103          	lb	x2,64(x18)
	li s4, 0
  5e:	0100                	c.addi4spn	x8,x2,128
	li s5, 0
  60:	04090103          	lb	x2,64(x18)
	li s6, 0
  64:	0100                	c.addi4spn	x8,x2,128
  66:	04090103          	lb	x2,64(x18)
	li s7, 0
  6a:	0100                	c.addi4spn	x8,x2,128
	li s8, 0
  6c:	04090103          	lb	x2,64(x18)
	li s9, 0
  70:	0100                	c.addi4spn	x8,x2,128
  72:	04090103          	lb	x2,64(x18)
	li s10, 0
  76:	0100                	c.addi4spn	x8,x2,128
	li s11, 0
  78:	04090103          	lb	x2,64(x18)
	li t3, 0
  7c:	0100                	c.addi4spn	x8,x2,128
  7e:	04090103          	lb	x2,64(x18)
	li t4, 0
  82:	0100                	c.addi4spn	x8,x2,128
	li t5, 0
  84:	04090103          	lb	x2,64(x18)
	li t6, 0
  88:	0100                	c.addi4spn	x8,x2,128
  8a:	04090103          	lb	x2,64(x18)
	j main
  8e:	0100                	c.addi4spn	x8,x2,128
  90:	04090103          	lb	x2,64(x18)
  94:	0100                	c.addi4spn	x8,x2,128
  96:	04090103          	lb	x2,64(x18)
  9a:	0100                	c.addi4spn	x8,x2,128
  9c:	04090103          	lb	x2,64(x18)
	la sp, _sp
  a0:	0100                	c.addi4spn	x8,x2,128
  a2:	04090103          	lb	x2,64(x18)
  a6:	0100                	c.addi4spn	x8,x2,128
	sw a0, -8(sp)
  a8:	04090103          	lb	x2,64(x18)
	nop
  ac:	0100                	c.addi4spn	x8,x2,128
  ae:	04090103          	lb	x2,64(x18)
	wfi
  b2:	0100                	c.addi4spn	x8,x2,128
void bubble(int arr[], int size) {
  b4:	04090103          	lb	x2,64(x18)
  b8:	0100                	c.addi4spn	x8,x2,128
  ba:	04090103          	lb	x2,64(x18)
  be:	0100                	c.addi4spn	x8,x2,128
  c0:	04090103          	lb	x2,64(x18)
  c4:	0100                	c.addi4spn	x8,x2,128
  c6:	04090103          	lb	x2,64(x18)
	for(int i = 0; i < (size-1); i++)
  ca:	0100                	c.addi4spn	x8,x2,128
  cc:	04090103          	lb	x2,64(x18)
		for(int j = i+1; j< size; j++)
  d0:	0100                	c.addi4spn	x8,x2,128
  d2:	04090103          	lb	x2,64(x18)
  d6:	0100                	c.addi4spn	x8,x2,128
  d8:	04090103          	lb	x2,64(x18)
  dc:	0100                	c.addi4spn	x8,x2,128
  de:	04090103          	lb	x2,64(x18)
			if(arr[j] < arr[i]){
  e2:	0100                	c.addi4spn	x8,x2,128
  e4:	04090103          	lb	x2,64(x18)
  e8:	0100                	c.addi4spn	x8,x2,128
  ea:	04090103          	lb	x2,64(x18)
  ee:	0100                	c.addi4spn	x8,x2,128
  f0:	0409                	c.addi	x8,2
  f2:	0000                	c.unimp
  f4:	0101                	c.addi	x2,0
  f6:	0500                	c.addi4spn	x8,x2,640
  f8:	a002                	c.fsdsp	f0,0(x2)
  fa:	0000                	c.unimp
  fc:	0300                	c.addi4spn	x8,x2,384
  fe:	01030133          	add	x2,x6,x16
 102:	0809                	c.addi	x16,2
 104:	0100                	c.addi4spn	x8,x2,128
 106:	04090103          	lb	x2,64(x18)
 10a:	0100                	c.addi4spn	x8,x2,128
				int temp = arr[j];
 10c:	04090103          	lb	x2,64(x18)
 110:	0100                	c.addi4spn	x8,x2,128
 112:	0409                	c.addi	x8,2
 114:	0000                	c.unimp
 116:	0101                	c.addi	x2,0
 118:	02e4                	c.addi4spn	x9,x2,332
 11a:	0000                	c.unimp
 11c:	01040003          	lb	x0,16(x8)
 120:	0000                	c.unimp
 122:	0101                	c.addi	x2,0
				arr[j] = arr[i];
 124:	000d0efb          	0xd0efb
 128:	0101                	c.addi	x2,0
 12a:	0101                	c.addi	x2,0
 12c:	0000                	c.unimp
 12e:	0100                	c.addi4spn	x8,x2,128
 130:	0000                	c.unimp
 132:	7401                	c.lui	x8,0xfffe0
 134:	7365                	c.lui	x6,0xffff9
 136:	5f74                	c.lw	x13,124(x14)
 138:	7270                	c.flw	f12,100(x12)
 13a:	0073676f          	jal	x14,36940 <_sp+0x26940>
 13e:	7273752f          	0x7273752f
 142:	2f6d752f          	0x2f6d752f
 146:	6972                	c.flwsp	f18,28(x2)
 148:	2d766373          	csrrsi	x6,0x2d7,12
				arr[i] = temp;
 14c:	2e39                	c.jal	46a <rand+0x86>
 14e:	2f32                	c.fldsp	f30,264(x2)
 150:	696c                	c.flw	f11,84(x10)
 152:	2f62                	c.fldsp	f30,24(x2)
 154:	2f636367          	0x2f636367
 158:	6972                	c.flwsp	f18,28(x2)
 15a:	36766373          	csrrsi	x6,0x367,12
 15e:	2d34                	c.fld	f13,88(x10)
 160:	6e75                	c.lui	x28,0x1d
 162:	776f6e6b          	0x776f6e6b
		for(int j = i+1; j< size; j++)
 166:	2d6e                	c.fldsp	f26,216(x2)
 168:	6c65                	c.lui	x24,0x19
 16a:	2f66                	c.fldsp	f30,88(x2)
 16c:	2e39                	c.jal	48a <_global_impure_ptr+0xa>
 16e:	2e32                	c.fldsp	f28,264(x2)
 170:	2f30                	c.fld	f12,88(x14)
 172:	6e69                	c.lui	x28,0x1a
 174:	64756c63          	bltu	x10,x7,7cc <impure_data+0x32c>
 178:	0065                	c.addi	x0,25
 17a:	7273752f          	0x7273752f
	for(int i = 0; i < (size-1); i++)
 17e:	2f6d752f          	0x2f6d752f
 182:	6972                	c.flwsp	f18,28(x2)
 184:	2d766373          	csrrsi	x6,0x2d7,12
 188:	2e39                	c.jal	4a6 <impure_data+0x6>
 18a:	2f32                	c.fldsp	f30,264(x2)
 18c:	6972                	c.flwsp	f18,28(x2)
 18e:	36766373          	csrrsi	x6,0x367,12
 192:	2d34                	c.fld	f13,88(x10)
 194:	6e75                	c.lui	x28,0x1d
 196:	776f6e6b          	0x776f6e6b
}
 19a:	2d6e                	c.fldsp	f26,216(x2)
 19c:	6c65                	c.lui	x24,0x19
 19e:	2f66                	c.fldsp	f30,88(x2)
 1a0:	6e69                	c.lui	x28,0x1a
 1a2:	64756c63          	bltu	x10,x7,7fa <impure_data+0x35a>
 1a6:	2f65                	c.jal	95e <_ebss+0x5e>
 1a8:	00737973          	csrrci	x18,0x7,6
int binarySearch(int arr[], int l, int r, int x) { 
 1ac:	7273752f          	0x7273752f
 1b0:	2f6d752f          	0x2f6d752f
 1b4:	6972                	c.flwsp	f18,28(x2)
 1b6:	2d766373          	csrrsi	x6,0x2d7,12
 1ba:	2e39                	c.jal	4d8 <impure_data+0x38>
 1bc:	2f32                	c.fldsp	f30,264(x2)
 1be:	6972                	c.flwsp	f18,28(x2)
 1c0:	36766373          	csrrsi	x6,0x367,12
 1c4:	2d34                	c.fld	f13,88(x10)
 1c6:	6e75                	c.lui	x28,0x1d
 1c8:	776f6e6b          	0x776f6e6b
	if (r >= l) { 
 1cc:	2d6e                	c.fldsp	f26,216(x2)
 1ce:	6c65                	c.lui	x24,0x19
 1d0:	2f66                	c.fldsp	f30,88(x2)
 1d2:	6e69                	c.lui	x28,0x1a
 1d4:	64756c63          	bltu	x10,x7,82c <impure_data+0x38c>
		int mid = l + (r - l) / 2; 
 1d8:	0065                	c.addi	x0,25
 1da:	7300                	c.flw	f8,32(x14)
 1dc:	5f74726f          	jal	x4,47fd2 <_sp+0x37fd2>
 1e0:	72616573          	csrrsi	x10,0x726,2
 1e4:	632e6863          	bltu	x28,x18,814 <impure_data+0x374>
 1e8:	0100                	c.addi4spn	x8,x2,128
 1ea:	0000                	c.unimp
 1ec:	64647473          	csrrci	x8,0x646,8
 1f0:	6665                	c.lui	x12,0x19
 1f2:	682e                	c.flwsp	f16,200(x2)
 1f4:	0200                	c.addi4spn	x8,x2,256
 1f6:	0000                	c.unimp
 1f8:	745f 7079 7365      	0x73657079745f
 1fe:	682e                	c.flwsp	f16,200(x2)
		if (arr[mid] == x) 
 200:	0300                	c.addi4spn	x8,x2,384
 202:	0000                	c.unimp
 204:	6572                	c.flwsp	f10,28(x2)
 206:	6e65                	c.lui	x28,0x19
 208:	2e74                	c.fld	f13,216(x12)
 20a:	0068                	c.addi4spn	x10,x2,12
 20c:	6c000003          	lb	x0,1728(x0) # 6c0 <impure_data+0x220>
 210:	2e6b636f          	jal	x6,b64f6 <_sp+0xa64f6>
 214:	0068                	c.addi4spn	x10,x2,12
 216:	73000003          	lb	x0,1840(x0) # 730 <impure_data+0x290>
 21a:	6474                	c.flw	f13,76(x8)
			return mid; 
 21c:	696c                	c.flw	f11,84(x10)
 21e:	2e62                	c.fldsp	f28,24(x2)
 220:	0068                	c.addi4spn	x10,x2,12
 222:	0004                	0x4
		if (arr[mid] > x) 
 224:	0000                	c.unimp
 226:	2205                	c.jal	346 <main+0x9e>
 228:	0500                	c.addi4spn	x8,x2,640
 22a:	b402                	c.fsdsp	f0,40(x2)
 22c:	0000                	c.unimp
 22e:	0300                	c.addi4spn	x8,x2,384
 230:	010c                	c.addi4spn	x11,x2,128
 232:	0a05                	c.addi	x20,1
 234:	14090203          	lb	x4,320(x18)
 238:	0100                	c.addi4spn	x8,x2,128
 23a:	0205                	c.addi	x4,1
 23c:	04090003          	lb	x0,64(x18)
			return binarySearch(arr, l, mid - 1, x); 
 240:	0100                	c.addi4spn	x8,x2,128
 242:	0b05                	c.addi	x22,1
 244:	04090103          	lb	x2,64(x18)
 248:	0100                	c.addi4spn	x8,x2,128
 24a:	0305                	c.addi	x6,1
 24c:	0c090003          	lb	x0,192(x18)
 250:	0100                	c.addi4spn	x8,x2,128
 252:	0a05                	c.addi	x20,1
 254:	04090103          	lb	x2,64(x18)
 258:	0100                	c.addi4spn	x8,x2,128
 25a:	1305                	c.addi	x6,-31
 25c:	14090003          	lb	x0,320(x18)
 260:	0100                	c.addi4spn	x8,x2,128
 262:	0605                	c.addi	x12,1
 264:	14090003          	lb	x0,320(x18)
		return binarySearch(arr, mid + 1, r, x); 
 268:	0100                	c.addi4spn	x8,x2,128
 26a:	1305                	c.addi	x6,-31
 26c:	04090103          	lb	x2,64(x18)
 270:	0100                	c.addi4spn	x8,x2,128
 272:	0905                	c.addi	x18,1
 274:	10090003          	lb	x0,256(x18)
 278:	0100                	c.addi4spn	x8,x2,128
 27a:	1105                	c.addi	x2,-31
 27c:	08090103          	lb	x2,128(x18)
 280:	0100                	c.addi4spn	x8,x2,128
 282:	0805                	c.addi	x16,1
 284:	10090003          	lb	x0,256(x18)
 288:	0100                	c.addi4spn	x8,x2,128
 28a:	1105                	c.addi	x2,-31
 28c:	10090003          	lb	x0,256(x18)
	return -1; 
 290:	0100                	c.addi4spn	x8,x2,128
 292:	0c05                	c.addi	x24,1
} 
 294:	04090003          	lb	x0,64(x18)
 298:	0100                	c.addi4spn	x8,x2,128
 29a:	0805                	c.addi	x16,1
 29c:	04090103          	lb	x2,64(x18)
 2a0:	0100                	c.addi4spn	x8,x2,128
 2a2:	0c05                	c.addi	x24,1
 2a4:	10090003          	lb	x0,256(x18)
int main(void) { 
 2a8:	0100                	c.addi4spn	x8,x2,128
 2aa:	1e05                	c.addi	x28,-31
 2ac:	0200                	c.addi4spn	x8,x2,256
 2ae:	0204                	c.addi4spn	x9,x2,256
 2b0:	08097c03          	0x8097c03
 2b4:	0100                	c.addi4spn	x8,x2,128
 2b6:	0305                	c.addi	x6,1
	for (int i = 0; i < N; ++i)
 2b8:	0200                	c.addi4spn	x8,x2,256
 2ba:	0104                	c.addi4spn	x9,x2,128
 2bc:	0c090003          	lb	x0,192(x18)
		arr[i] = rand() & (31);
 2c0:	0100                	c.addi4spn	x8,x2,128
 2c2:	2005                	c.jal	2e2 <main+0x3a>
 2c4:	0200                	c.addi4spn	x8,x2,256
 2c6:	0204                	c.addi4spn	x9,x2,256
 2c8:	0c097f03          	0xc097f03
 2cc:	0100                	c.addi4spn	x8,x2,128
 2ce:	1a05                	c.addi	x20,-31
 2d0:	0200                	c.addi4spn	x8,x2,256
 2d2:	0104                	c.addi4spn	x9,x2,128
 2d4:	0c090003          	lb	x0,192(x18)
 2d8:	0100                	c.addi4spn	x8,x2,128
 2da:	0205                	c.addi	x4,1
 2dc:	0200                	c.addi4spn	x8,x2,256
 2de:	0104                	c.addi4spn	x9,x2,128
 2e0:	08090003          	lb	x0,128(x18)
	for (int i = 0; i < N; ++i)
 2e4:	0100                	c.addi4spn	x8,x2,128
 2e6:	0105                	c.addi	x2,1
 2e8:	08090703          	lb	x14,128(x18)
 2ec:	0100                	c.addi4spn	x8,x2,128
 2ee:	3205                	c.jal	fffffc0e <_sp+0xfffefc0e>
 2f0:	14090503          	lb	x10,320(x18)
 2f4:	0100                	c.addi4spn	x8,x2,128
 2f6:	0505                	c.addi	x10,1
 2f8:	20090103          	lb	x2,512(x18)
	int x = 10;
 2fc:	0100                	c.addi4spn	x8,x2,128
 2fe:	1405                	c.addi	x8,-31
 300:	0c090103          	lb	x2,192(x18)
	bubble(arr, N);
 304:	0100                	c.addi4spn	x8,x2,128
 306:	1905                	c.addi	x18,-31
 308:	0c090003          	lb	x0,192(x18)
 30c:	0100                	c.addi4spn	x8,x2,128
 30e:	0705                	c.addi	x14,1
 310:	10090003          	lb	x0,256(x18)
 314:	0100                	c.addi4spn	x8,x2,128
 316:	0a05                	c.addi	x20,1
	int result = binarySearch(arr, 0, N-1, x);
 318:	0c090403          	lb	x8,192(x18)
 31c:	0100                	c.addi4spn	x8,x2,128
 31e:	0605                	c.addi	x12,1
 320:	14090003          	lb	x0,320(x18)
 324:	0100                	c.addi4spn	x8,x2,128
 326:	0b05                	c.addi	x22,1
 328:	08090103          	lb	x2,128(x18)
 32c:	0100                	c.addi4spn	x8,x2,128
 32e:	0a05                	c.addi	x20,1
 330:	08090403          	lb	x8,128(x18)
 334:	0100                	c.addi4spn	x8,x2,128
 336:	0605                	c.addi	x12,1
	int another_result = binarySearch(arr, 0, N-1,420);
 338:	14090003          	lb	x0,320(x18)
 33c:	0100                	c.addi4spn	x8,x2,128
 33e:	0b05                	c.addi	x22,1
 340:	08090103          	lb	x2,128(x18)
 344:	0100                	c.addi4spn	x8,x2,128
 346:	0a05                	c.addi	x20,1
 348:	28090403          	lb	x8,640(x18)
 34c:	0100                	c.addi4spn	x8,x2,128
 34e:	0905                	c.addi	x18,1
 350:	28090503          	lb	x10,640(x18)
 354:	0100                	c.addi4spn	x8,x2,128
 356:	0105                	c.addi	x2,1
	int larry = binarySearch(arr, 0, N-1,33); //larry
 358:	04090103          	lb	x2,64(x18)
 35c:	0100                	c.addi4spn	x8,x2,128
 35e:	1005                	c.addi	x0,-31
 360:	14090203          	lb	x4,320(x18)
 364:	0100                	c.addi4spn	x8,x2,128
 366:	0b05                	c.addi	x22,1
 368:	10090303          	lb	x6,256(x18)
 36c:	0100                	c.addi4spn	x8,x2,128
 36e:	0205                	c.addi	x4,1
 370:	04090003          	lb	x0,64(x18)
 374:	0100                	c.addi4spn	x8,x2,128
 376:	0c05                	c.addi	x24,1
	int goat = binarySearch(arr, 0, N-1,23); //mj or l3-6
 378:	0200                	c.addi4spn	x8,x2,256
 37a:	0304                	c.addi4spn	x9,x2,384
 37c:	04090103          	lb	x2,64(x18)
 380:	0100                	c.addi4spn	x8,x2,128
 382:	1305                	c.addi	x6,-31
 384:	0200                	c.addi4spn	x8,x2,256
 386:	0304                	c.addi4spn	x9,x2,384
 388:	0c090003          	lb	x0,192(x18)
 38c:	0100                	c.addi4spn	x8,x2,128
 38e:	0a05                	c.addi	x20,1
 390:	0200                	c.addi4spn	x8,x2,256
 392:	0304                	c.addi4spn	x9,x2,384
 394:	04090003          	lb	x0,64(x18)
	int brady = binarySearch(arr, 0, N-1,12);
 398:	0100                	c.addi4spn	x8,x2,128
 39a:	1905                	c.addi	x18,-31
 39c:	0200                	c.addi4spn	x8,x2,256
 39e:	0304                	c.addi4spn	x9,x2,384
 3a0:	14097f03          	0x14097f03
 3a4:	0100                	c.addi4spn	x8,x2,128
 3a6:	0205                	c.addi	x4,1
 3a8:	0200                	c.addi4spn	x8,x2,256
 3aa:	0104                	c.addi4spn	x9,x2,128
 3ac:	0c090003          	lb	x0,192(x18)
 3b0:	0100                	c.addi4spn	x8,x2,128
 3b2:	0605                	c.addi	x12,1
 3b4:	0c090303          	lb	x6,192(x18)
	return 0; 
 3b8:	0100                	c.addi4spn	x8,x2,128
 3ba:	0205                	c.addi	x4,1
} 
 3bc:	08090103          	lb	x2,128(x18)
 3c0:	0100                	c.addi4spn	x8,x2,128
 3c2:	0f05                	c.addi	x30,1
 3c4:	14090103          	lb	x2,320(x18)
 3c8:	0100                	c.addi4spn	x8,x2,128
 3ca:	1705                	c.addi	x14,-31
 3cc:	20090103          	lb	x2,512(x18)
 3d0:	0100                	c.addi4spn	x8,x2,128
 3d2:	0e05                	c.addi	x28,1
 3d4:	20090103          	lb	x2,512(x18)
 3d8:	0100                	c.addi4spn	x8,x2,128
 3da:	0d05                	c.addi	x26,1
 3dc:	20090103          	lb	x2,512(x18)
 3e0:	0100                	c.addi4spn	x8,x2,128
 3e2:	0e05                	c.addi	x28,1
 3e4:	20090103          	lb	x2,512(x18)
 3e8:	0100                	c.addi4spn	x8,x2,128
 3ea:	0905                	c.addi	x18,1
 3ec:	20090403          	lb	x8,512(x18)
 3f0:	0100                	c.addi4spn	x8,x2,128
 3f2:	0105                	c.addi	x2,1
 3f4:	04090103          	lb	x2,64(x18)
 3f8:	0100                	c.addi4spn	x8,x2,128
 3fa:	1409                	c.addi	x8,-30
 3fc:	0000                	c.unimp
 3fe:	0101                	c.addi	x2,0

Disassembly of section .debug_info:

00000000 <.debug_info>:
	nop
   0:	001e                	c.slli	x0,0x7
   2:	0000                	c.unimp
	la ra, exit
   4:	0002                	c.slli64	x0
   6:	0000                	c.unimp
   8:	0000                	c.unimp
   a:	0104                	c.addi4spn	x9,x2,128
	...
	la gp, __global_pointer$
  18:	0006                	c.slli	x0,0x1
  1a:	0000                	c.unimp
  1c:	0024                	c.addi4spn	x9,x2,8
  1e:	0000                	c.unimp
	li tp, 0
  20:	8001                	c.srli64	x8
  22:	0ab0                	c.addi4spn	x12,x2,344
	li t0, 0
  24:	0000                	c.unimp
  26:	0004                	0x4
	li t1, 0
  28:	0012                	c.slli	x0,0x4
  2a:	0000                	c.unimp
	li t2, 0
  2c:	0104                	c.addi4spn	x9,x2,128
  2e:	004a                	c.slli	x0,0x12
	li s1, 0
  30:	0000                	c.unimp
  32:	ab0c                	c.fsd	f11,16(x14)
	li a0, 0
  34:	0001                	c.addi	x0,0
  36:	0600                	c.addi4spn	x8,x2,768
	li a1, 0
  38:	0000                	c.unimp
  3a:	b400                	c.fsd	f8,40(x8)
	li a2, 0
  3c:	0000                	c.unimp
  3e:	1c00                	c.addi4spn	x8,x2,560
	li a3, 0
  40:	18000003          	lb	x0,384(x0) # 180 <bubble+0xcc>
	li a4, 0
  44:	0001                	c.addi	x0,0
  46:	0200                	c.addi4spn	x8,x2,256
	li a5, 0
  48:	0704                	c.addi4spn	x9,x2,896
  4a:	00ec                	c.addi4spn	x11,x2,76
	li a6, 0
  4c:	0000                	c.unimp
  4e:	69050403          	lb	x8,1680(x10)
	li a7, 0
  52:	746e                	c.flwsp	f8,248(x2)
	li s2, 0
  54:	0200                	c.addi4spn	x8,x2,256
  56:	0508                	c.addi4spn	x10,x2,640
	li s3, 0
  58:	00000133          	add	x2,x0,x0
	li s4, 0
  5c:	1002                	c.slli	x0,0x20
  5e:	dd04                	c.sw	x9,56(x10)
	li s5, 0
  60:	0002                	c.slli64	x0
  62:	0400                	c.addi4spn	x8,x2,512
	li s6, 0
  64:	02ae                	c.slli	x5,0xb
  66:	0000                	c.unimp
	li s7, 0
  68:	5e02                	c.lwsp	x28,32(x2)
  6a:	1701                	c.addi	x14,-32
	li s8, 0
  6c:	0025                	c.addi	x0,9
  6e:	0000                	c.unimp
	li s9, 0
  70:	0102                	c.slli64	x2
  72:	3b06                	c.fldsp	f22,96(x2)
	li s10, 0
  74:	02000003          	lb	x0,32(x0) # 20 <crt+0x20>
	li s11, 0
  78:	0801                	c.addi	x16,0
  7a:	0339                	c.addi	x6,14
	li t3, 0
  7c:	0000                	c.unimp
  7e:	0202                	c.slli64	x4
	li t4, 0
  80:	5505                	c.li	x10,-31
  82:	02000003          	lb	x0,32(x0) # 20 <crt+0x20>
	li t5, 0
  86:	0702                	c.slli64	x14
	li t6, 0
  88:	00000273          	0x273
	j main
  8c:	0402                	c.slli64	x8
  8e:	3805                	c.jal	fffff8be <_sp+0xfffef8be>
  90:	0001                	c.addi	x0,0
  92:	0200                	c.addi4spn	x8,x2,256
  94:	0704                	c.addi4spn	x9,x2,896
  96:	000000e7          	jalr	x1,0(x0) # 0 <crt>
  9a:	0802                	c.slli64	x16
  9c:	0000e207          	0xe207
	la sp, _sp
  a0:	0500                	c.addi4spn	x8,x2,640
  a2:	0316                	c.slli	x6,0x5
  a4:	0000                	c.unimp
  a6:	6a0e2e03          	lw	x28,1696(x28) # 196a0 <_sp+0x96a0>
	sw a0, -8(sp)
  aa:	0000                	c.unimp
	nop
  ac:	0500                	c.addi4spn	x8,x2,640
  ae:	0411                	c.addi	x8,4
	wfi
  b0:	0000                	c.unimp
  b2:	6a0e7403          	0x6a0e7403
void bubble(int arr[], int size) {
  b6:	0000                	c.unimp
  b8:	0500                	c.addi4spn	x8,x2,640
  ba:	000004a3          	sb	x0,9(x0) # 9 <crt+0x9>
  be:	2c179303          	lh	x6,705(x15)
  c2:	0000                	c.unimp
  c4:	0600                	c.addi4spn	x8,x2,768
  c6:	0304                	c.addi4spn	x9,x2,384
	for(int i = 0; i < (size-1); i++)
  c8:	03a5                	c.addi	x7,9
  ca:	00c5                	c.addi	x1,17
  cc:	0000                	c.unimp
  ce:	0002a807          	flw	f16,0(x5)
		for(int j = i+1; j< size; j++)
  d2:	0300                	c.addi4spn	x8,x2,384
  d4:	00410ca7          	0x410ca7
  d8:	0000                	c.unimp
  da:	00024907          	flq	f18,0(x4) # fffe1000 <_sp+0xfffd1000>
  de:	0300                	c.addi4spn	x8,x2,384
			if(arr[j] < arr[i]){
  e0:	13a8                	c.addi4spn	x10,x2,488
  e2:	00c5                	c.addi	x1,17
  e4:	0000                	c.unimp
  e6:	0800                	c.addi4spn	x8,x2,16
  e8:	0055                	c.addi	x0,21
  ea:	0000                	c.unimp
  ec:	00d5                	c.addi	x1,21
  ee:	0000                	c.unimp
  f0:	2509                	c.jal	6f2 <impure_data+0x252>
  f2:	0000                	c.unimp
  f4:	0300                	c.addi4spn	x8,x2,384
  f6:	0a00                	c.addi4spn	x8,x2,272
  f8:	0308                	c.addi4spn	x10,x2,384
  fa:	09a2                	c.slli	x19,0x8
  fc:	00f9                	c.addi	x1,30
  fe:	0000                	c.unimp
 100:	0003fb0b          	0x3fb0b
 104:	0300                	c.addi4spn	x8,x2,384
 106:	07a4                	c.addi4spn	x9,x2,968
 108:	002c                	c.addi4spn	x11,x2,8
 10a:	0000                	c.unimp
				int temp = arr[j];
 10c:	0b00                	c.addi4spn	x8,x2,400
 10e:	00000403          	lb	x8,0(x0) # 0 <crt>
 112:	a305a903          	lw	x18,-1488(x11)
 116:	0000                	c.unimp
 118:	0400                	c.addi4spn	x8,x2,512
 11a:	0500                	c.addi4spn	x8,x2,640
 11c:	037d                	c.addi	x6,31
 11e:	0000                	c.unimp
 120:	d503aa03          	lw	x20,-688(x7)
				arr[j] = arr[i];
 124:	0000                	c.unimp
 126:	0c00                	c.addi4spn	x8,x2,528
 128:	0504                	c.addi4spn	x9,x2,640
 12a:	0452                	c.slli	x8,0x14
 12c:	0000                	c.unimp
 12e:	1604                	c.addi4spn	x9,x2,800
 130:	7119                	c.addi16sp	x2,-128
 132:	0000                	c.unimp
 134:	0500                	c.addi4spn	x8,x2,640
 136:	00000327          	0x327
 13a:	0c05                	c.addi	x24,1
 13c:	2c0d                	c.jal	36e <main+0xc6>
 13e:	0000                	c.unimp
 140:	0500                	c.addi4spn	x8,x2,640
 142:	020c                	c.addi4spn	x11,x2,256
 144:	0000                	c.unimp
 146:	2304                	c.fld	f9,0(x14)
 148:	0001131b          	0x1131b
				arr[i] = temp;
 14c:	0d00                	c.addi4spn	x8,x2,656
 14e:	021d                	c.addi	x4,7
 150:	0000                	c.unimp
 152:	0418                	c.addi4spn	x14,x2,512
 154:	0834                	c.addi4spn	x13,x2,24
 156:	0185                	c.addi	x3,1
 158:	0000                	c.unimp
 15a:	00039e0b          	0x39e0b
 15e:	0400                	c.addi4spn	x8,x2,512
 160:	1336                	c.slli	x6,0x2d
 162:	0185                	c.addi	x3,1
		for(int j = i+1; j< size; j++)
 164:	0000                	c.unimp
 166:	0e00                	c.addi4spn	x8,x2,784
 168:	6b5f 0400 0737      	0x73704006b5f
 16e:	002c                	c.addi4spn	x11,x2,8
 170:	0000                	c.unimp
 172:	0b04                	c.addi4spn	x9,x2,400
 174:	03e6                	c.slli	x7,0x19
 176:	0000                	c.unimp
 178:	3704                	c.fld	f9,40(x14)
 17a:	00002c0b          	0x2c0b
	for(int i = 0; i < (size-1); i++)
 17e:	0800                	c.addi4spn	x8,x2,16
 180:	0002060b          	0x2060b
 184:	0400                	c.addi4spn	x8,x2,512
 186:	002c1437          	lui	x8,0x2c1
 18a:	0000                	c.unimp
 18c:	0b0c                	c.addi4spn	x11,x2,400
 18e:	048e                	c.slli	x9,0x3
 190:	0000                	c.unimp
 192:	3704                	c.fld	f9,40(x14)
 194:	00002c1b          	0x2c1b
}
 198:	1000                	c.addi4spn	x8,x2,32
 19a:	5f0e                	c.lwsp	x30,224(x2)
 19c:	0078                	c.addi4spn	x14,x2,12
 19e:	3804                	c.fld	f9,48(x8)
 1a0:	00018b0b          	0x18b0b
 1a4:	1400                	c.addi4spn	x8,x2,544
 1a6:	0f00                	c.addi4spn	x8,x2,912
 1a8:	2b04                	c.fld	f9,16(x14)
 1aa:	0001                	c.addi	x0,0
int binarySearch(int arr[], int l, int r, int x) { 
 1ac:	0800                	c.addi4spn	x8,x2,16
 1ae:	00000107          	0x107
 1b2:	0000019b          	0x19b
 1b6:	2509                	c.jal	7b8 <impure_data+0x318>
 1b8:	0000                	c.unimp
 1ba:	0000                	c.unimp
 1bc:	0d00                	c.addi4spn	x8,x2,656
 1be:	0244                	c.addi4spn	x9,x2,260
 1c0:	0000                	c.unimp
 1c2:	0424                	c.addi4spn	x9,x2,520
 1c4:	083c                	c.addi4spn	x15,x2,24
 1c6:	021e                	c.slli	x4,0x7
 1c8:	0000                	c.unimp
 1ca:	00012a0b          	0x12a0b
	if (r >= l) { 
 1ce:	0400                	c.addi4spn	x8,x2,512
 1d0:	093e                	c.slli	x18,0xf
 1d2:	002c                	c.addi4spn	x11,x2,8
 1d4:	0000                	c.unimp
 1d6:	0b00                	c.addi4spn	x8,x2,400
		int mid = l + (r - l) / 2; 
 1d8:	0419                	c.addi	x8,6
 1da:	0000                	c.unimp
 1dc:	3f04                	c.fld	f9,56(x14)
 1de:	2c09                	c.jal	3f0 <rand+0xc>
 1e0:	0000                	c.unimp
 1e2:	0400                	c.addi4spn	x8,x2,512
 1e4:	00015a0b          	0x15a0b
 1e8:	0400                	c.addi4spn	x8,x2,512
 1ea:	0940                	c.addi4spn	x8,x2,148
 1ec:	002c                	c.addi4spn	x11,x2,8
 1ee:	0000                	c.unimp
 1f0:	0b08                	c.addi4spn	x10,x2,400
 1f2:	050c                	c.addi4spn	x11,x2,640
 1f4:	0000                	c.unimp
 1f6:	4104                	c.lw	x9,0(x10)
 1f8:	2c09                	c.jal	40a <rand+0x26>
 1fa:	0000                	c.unimp
 1fc:	0c00                	c.addi4spn	x8,x2,528
 1fe:	0002f00b          	0x2f00b
		if (arr[mid] == x) 
 202:	0400                	c.addi4spn	x8,x2,512
 204:	0942                	c.slli	x18,0x10
 206:	002c                	c.addi4spn	x11,x2,8
 208:	0000                	c.unimp
 20a:	0b10                	c.addi4spn	x12,x2,400
 20c:	02ca                	c.slli	x5,0x12
 20e:	0000                	c.unimp
 210:	4304                	c.lw	x9,0(x14)
 212:	2c09                	c.jal	424 <rand+0x40>
 214:	0000                	c.unimp
 216:	1400                	c.addi4spn	x8,x2,544
 218:	0004930b          	0x4930b
			return mid; 
 21c:	0400                	c.addi4spn	x8,x2,512
 21e:	0944                	c.addi4spn	x9,x2,148
 220:	002c                	c.addi4spn	x11,x2,8
 222:	0000                	c.unimp
		if (arr[mid] > x) 
 224:	0b18                	c.addi4spn	x14,x2,400
 226:	035f 0000 4504      	0x45040000035f
 22c:	2c09                	c.jal	43e <rand+0x5a>
 22e:	0000                	c.unimp
 230:	1c00                	c.addi4spn	x8,x2,560
 232:	0004ce0b          	0x4ce0b
 236:	0400                	c.addi4spn	x8,x2,512
 238:	0946                	c.slli	x18,0x11
 23a:	002c                	c.addi4spn	x11,x2,8
 23c:	0000                	c.unimp
 23e:	0020                	c.addi4spn	x8,x2,8
			return binarySearch(arr, l, mid - 1, x); 
 240:	6910                	c.flw	f12,16(x10)
 242:	0001                	c.addi	x0,0
 244:	0800                	c.addi4spn	x8,x2,16
 246:	0401                	c.addi	x8,0
 248:	0263084f          	fnmadd.d	f16,f6,f6,f0,rne
 24c:	0000                	c.unimp
 24e:	0001f30b          	0x1f30b
 252:	0400                	c.addi4spn	x8,x2,512
 254:	0a50                	c.addi4spn	x12,x2,276
 256:	00000263          	beq	x0,x0,25a <binarySearch+0xae>
 25a:	0b00                	c.addi4spn	x8,x2,400
 25c:	0030                	c.addi4spn	x12,x2,8
 25e:	0000                	c.unimp
 260:	5104                	c.lw	x9,32(x10)
 262:	6309                	c.lui	x6,0x2
 264:	0002                	c.slli64	x0
 266:	8000                	0x8000
		return binarySearch(arr, mid + 1, r, x); 
 268:	4411                	c.li	x8,4
 26a:	0004                	0x4
 26c:	0400                	c.addi4spn	x8,x2,512
 26e:	01070a53          	fadd.s	f20,f14,f16,rne
 272:	0000                	c.unimp
 274:	0100                	c.addi4spn	x8,x2,128
 276:	9311                	c.srli	x14,0x24
 278:	0001                	c.addi	x0,0
 27a:	0400                	c.addi4spn	x8,x2,512
 27c:	0a56                	c.slli	x20,0x15
 27e:	00000107          	0x107
 282:	0104                	c.addi4spn	x9,x2,128
 284:	0800                	c.addi4spn	x8,x2,16
 286:	0105                	c.addi	x2,1
 288:	0000                	c.unimp
 28a:	00000273          	0x273
 28e:	2509                	c.jal	890 <impure_data+0x3f0>
	return -1; 
 290:	0000                	c.unimp
 292:	1f00                	c.addi4spn	x8,x2,944
} 
 294:	1000                	c.addi4spn	x8,x2,32
 296:	02f9                	c.addi	x5,30
 298:	0000                	c.unimp
 29a:	0190                	c.addi4spn	x12,x2,192
 29c:	6204                	c.flw	f9,0(x12)
 29e:	b608                	c.fsd	f10,40(x12)
 2a0:	0002                	c.slli64	x0
 2a2:	0b00                	c.addi4spn	x8,x2,400
 2a4:	039e                	c.slli	x7,0x7
 2a6:	0000                	c.unimp
int main(void) { 
 2a8:	6304                	c.flw	f9,0(x14)
 2aa:	b612                	c.fsdsp	f4,296(x2)
 2ac:	0002                	c.slli64	x0
 2ae:	0000                	c.unimp
 2b0:	0003b60b          	0x3b60b
 2b4:	0400                	c.addi4spn	x8,x2,512
 2b6:	0664                	c.addi4spn	x9,x2,780
	for (int i = 0; i < N; ++i)
 2b8:	002c                	c.addi4spn	x11,x2,8
 2ba:	0000                	c.unimp
 2bc:	0b04                	c.addi4spn	x9,x2,400
 2be:	000001fb          	0x1fb
		arr[i] = rand() & (31);
 2c2:	6604                	c.flw	f9,8(x12)
 2c4:	bc09                	c.j	fffffcd6 <_sp+0xfffefcd6>
 2c6:	0002                	c.slli64	x0
 2c8:	0800                	c.addi4spn	x8,x2,16
 2ca:	0001690b          	0x1690b
 2ce:	0400                	c.addi4spn	x8,x2,512
 2d0:	021e1e67          	0x21e1e67
 2d4:	0000                	c.unimp
 2d6:	0088                	c.addi4spn	x10,x2,64
 2d8:	0273040f          	0x273040f
 2dc:	0000                	c.unimp
 2de:	cc08                	c.sw	x10,24(x8)
 2e0:	0002                	c.slli64	x0
 2e2:	cc00                	c.sw	x8,24(x8)
	for (int i = 0; i < N; ++i)
 2e4:	0002                	c.slli64	x0
 2e6:	0900                	c.addi4spn	x8,x2,144
 2e8:	0025                	c.addi	x0,9
 2ea:	0000                	c.unimp
 2ec:	001f 040f 02d2      	0x2d2040f001f
 2f2:	0000                	c.unimp
 2f4:	0d12                	c.slli	x26,0x4
 2f6:	0369                	c.addi	x6,26
 2f8:	0000                	c.unimp
 2fa:	0408                	c.addi4spn	x10,x2,512
	int x = 10;
 2fc:	087a                	c.slli	x16,0x1e
 2fe:	000002fb          	0x2fb
 302:	0001540b          	0x1540b
	bubble(arr, N);
 306:	0400                	c.addi4spn	x8,x2,512
 308:	02fb117b          	0x2fb117b
 30c:	0000                	c.unimp
 30e:	0b00                	c.addi4spn	x8,x2,400
 310:	003c                	c.addi4spn	x15,x2,8
 312:	0000                	c.unimp
 314:	7c04                	c.flw	f9,56(x8)
 316:	2c06                	c.fldsp	f24,64(x2)
	int result = binarySearch(arr, 0, N-1, x);
 318:	0000                	c.unimp
 31a:	0400                	c.addi4spn	x8,x2,512
 31c:	0f00                	c.addi4spn	x8,x2,912
 31e:	5504                	c.lw	x9,40(x10)
 320:	0000                	c.unimp
 322:	0d00                	c.addi4spn	x8,x2,656
 324:	0388                	c.addi4spn	x10,x2,448
 326:	0000                	c.unimp
 328:	0468                	c.addi4spn	x10,x2,524
 32a:	08ba                	c.slli	x17,0xe
 32c:	0444                	c.addi4spn	x9,x2,516
 32e:	0000                	c.unimp
 330:	5f0e                	c.lwsp	x30,224(x2)
 332:	0070                	c.addi4spn	x12,x2,12
 334:	bb04                	c.fsd	f9,48(x14)
 336:	fb12                	c.fswsp	f4,180(x2)
	int another_result = binarySearch(arr, 0, N-1,420);
 338:	0002                	c.slli64	x0
 33a:	0000                	c.unimp
 33c:	5f0e                	c.lwsp	x30,224(x2)
 33e:	0072                	c.slli	x0,0x1c
 340:	bc04                	c.fsd	f9,56(x8)
 342:	00002c07          	flw	f24,0(x0) # 0 <crt>
 346:	0400                	c.addi4spn	x8,x2,512
 348:	5f0e                	c.lwsp	x30,224(x2)
 34a:	bd040077          	0xbd040077
 34e:	00002c07          	flw	f24,0(x0) # 0 <crt>
 352:	0800                	c.addi4spn	x8,x2,16
 354:	00018c0b          	0x18c0b
	int larry = binarySearch(arr, 0, N-1,33); //larry
 358:	0400                	c.addi4spn	x8,x2,512
 35a:	09be                	c.slli	x19,0xf
 35c:	005c                	c.addi4spn	x15,x2,4
 35e:	0000                	c.unimp
 360:	0b0c                	c.addi4spn	x11,x2,400
 362:	0266                	c.slli	x4,0x19
 364:	0000                	c.unimp
 366:	bf04                	c.fsd	f9,56(x14)
 368:	5c09                	c.li	x24,-30
 36a:	0000                	c.unimp
 36c:	0e00                	c.addi4spn	x8,x2,784
 36e:	5f0e                	c.lwsp	x30,224(x2)
 370:	6662                	c.flwsp	f12,24(x2)
 372:	0400                	c.addi4spn	x8,x2,512
 374:	11c0                	c.addi4spn	x8,x2,228
 376:	000002d3          	fadd.s	f5,f0,f0,rne
	int goat = binarySearch(arr, 0, N-1,23); //mj or l3-6
 37a:	0b10                	c.addi4spn	x12,x2,400
 37c:	00f9                	c.addi	x1,30
 37e:	0000                	c.unimp
 380:	c104                	c.sw	x9,0(x10)
 382:	00002c07          	flw	f24,0(x0) # 0 <crt>
 386:	1800                	c.addi4spn	x8,x2,48
 388:	0001770b          	0x1770b
 38c:	0400                	c.addi4spn	x8,x2,512
 38e:	0ac8                	c.addi4spn	x10,x2,340
 390:	0105                	c.addi	x2,1
 392:	0000                	c.unimp
 394:	0b1c                	c.addi4spn	x15,x2,400
 396:	0234                	c.addi4spn	x13,x2,264
	int brady = binarySearch(arr, 0, N-1,12);
 398:	0000                	c.unimp
 39a:	ca04                	c.sw	x9,16(x12)
 39c:	c81d                	c.beqz	x8,3d2 <srand+0x2>
 39e:	0005                	c.addi	x0,1
 3a0:	2000                	c.fld	f8,0(x8)
 3a2:	0002c30b          	0x2c30b
 3a6:	0400                	c.addi4spn	x8,x2,512
 3a8:	1dcc                	c.addi4spn	x11,x2,756
 3aa:	05f2                	c.slli	x11,0x1c
 3ac:	0000                	c.unimp
 3ae:	0b24                	c.addi4spn	x9,x2,408
 3b0:	0000040b          	0x40b
 3b4:	cf04                	c.sw	x9,24(x14)
 3b6:	160d                	c.addi	x12,-29
	return 0; 
 3b8:	0006                	c.slli	x0,0x1
 3ba:	2800                	c.fld	f8,16(x8)
} 
 3bc:	0004e80b          	0x4e80b
 3c0:	0400                	c.addi4spn	x8,x2,512
 3c2:	09d0                	c.addi4spn	x12,x2,212
 3c4:	0630                	c.addi4spn	x12,x2,776
 3c6:	0000                	c.unimp
 3c8:	0e2c                	c.addi4spn	x11,x2,792
 3ca:	755f 0062 d304      	0xd3040062755f
 3d0:	d311                	c.beqz	x14,2d4 <main+0x2c>
 3d2:	0002                	c.slli64	x0
 3d4:	3000                	c.fld	f8,32(x8)
 3d6:	5f0e                	c.lwsp	x30,224(x2)
 3d8:	7075                	c.lui	x0,0xffffd
 3da:	0400                	c.addi4spn	x8,x2,512
 3dc:	12d4                	c.addi4spn	x13,x2,356
 3de:	000002fb          	0x2fb
 3e2:	0e38                	c.addi4spn	x14,x2,792
 3e4:	755f 0072 d504      	0xd5040072755f
 3ea:	00002c07          	flw	f24,0(x0) # 0 <crt>
 3ee:	3c00                	c.fld	f8,56(x8)
 3f0:	00014e0b          	0x14e0b
 3f4:	0400                	c.addi4spn	x8,x2,512
 3f6:	11d8                	c.addi4spn	x14,x2,228
 3f8:	0636                	c.slli	x12,0xd
 3fa:	0000                	c.unimp
 3fc:	0b40                	c.addi4spn	x8,x2,404
 3fe:	04c0                	c.addi4spn	x8,x2,580
 400:	0000                	c.unimp
 402:	d904                	c.sw	x9,48(x10)
 404:	4611                	c.li	x12,4
 406:	0006                	c.slli	x0,0x1
 408:	4300                	c.lw	x8,0(x14)
 40a:	5f0e                	c.lwsp	x30,224(x2)
 40c:	626c                	c.flw	f11,68(x12)
 40e:	0400                	c.addi4spn	x8,x2,512
 410:	11dc                	c.addi4spn	x15,x2,228
 412:	000002d3          	fadd.s	f5,f0,f0,rne
 416:	0b44                	c.addi4spn	x9,x2,404
 418:	01a2                	c.slli	x3,0x8
 41a:	0000                	c.unimp
 41c:	df04                	c.sw	x9,56(x14)
 41e:	00002c07          	flw	f24,0(x0) # 0 <crt>
 422:	4c00                	c.lw	x8,24(x8)
 424:	0001cc0b          	0x1cc0b
 428:	0400                	c.addi4spn	x8,x2,512
 42a:	0ae0                	c.addi4spn	x8,x2,348
 42c:	007f                	0x7f
 42e:	0000                	c.unimp
 430:	0b50                	c.addi4spn	x12,x2,404
 432:	00bc                	c.addi4spn	x15,x2,72
 434:	0000                	c.unimp
 436:	e304                	c.fsw	f9,0(x14)
 438:	6212                	c.flwsp	f4,4(x2)
 43a:	0004                	0x4
 43c:	5400                	c.lw	x8,40(x8)
 43e:	0002b50b          	0x2b50b
 442:	0400                	c.addi4spn	x8,x2,512
 444:	011f0ce7          	jalr	x25,17(x30)
 448:	0000                	c.unimp
 44a:	0b58                	c.addi4spn	x14,x2,404
 44c:	0390                	c.addi4spn	x12,x2,448
 44e:	0000                	c.unimp
 450:	e904                	c.fsw	f9,16(x10)
 452:	f90e                	c.fswsp	f3,176(x2)
 454:	0000                	c.unimp
 456:	5c00                	c.lw	x8,56(x8)
 458:	0002bb0b          	0x2bb0b
 45c:	0400                	c.addi4spn	x8,x2,512
 45e:	09ea                	c.slli	x19,0x1a
 460:	002c                	c.addi4spn	x11,x2,8
 462:	0000                	c.unimp
 464:	0064                	c.addi4spn	x9,x2,12
 466:	00009713          	slli	x14,x1,0x0
 46a:	6200                	c.flw	f8,0(x12)
 46c:	0004                	0x4
 46e:	1400                	c.addi4spn	x8,x2,544
 470:	0462                	c.slli	x8,0x18
 472:	0000                	c.unimp
 474:	0514                	c.addi4spn	x13,x2,640
 476:	0001                	c.addi	x0,0
 478:	1400                	c.addi4spn	x8,x2,544
 47a:	05b6                	c.slli	x11,0xd
 47c:	0000                	c.unimp
 47e:	2c14                	c.fld	f13,24(x8)
 480:	0000                	c.unimp
 482:	0000                	c.unimp
 484:	046d040f          	0x46d040f
 488:	0000                	c.unimp
 48a:	6215                	c.lui	x4,0x5
 48c:	0004                	0x4
 48e:	1600                	c.addi4spn	x8,x2,800
 490:	03ee                	c.slli	x7,0x1b
 492:	0000                	c.unimp
 494:	0428                	c.addi4spn	x10,x2,520
 496:	6504                	c.flw	f9,8(x10)
 498:	0802                	c.slli64	x16
 49a:	05b6                	c.slli	x11,0xd
 49c:	0000                	c.unimp
 49e:	00034e17          	auipc	x28,0x34
 4a2:	0400                	c.addi4spn	x8,x2,512
 4a4:	2c070267          	jalr	x4,704(x14)
 4a8:	0000                	c.unimp
 4aa:	0000                	c.unimp
 4ac:	00019b17          	auipc	x22,0x19
 4b0:	0400                	c.addi4spn	x8,x2,512
 4b2:	026c                	c.addi4spn	x11,x2,268
 4b4:	0006a20b          	0x6a20b
 4b8:	0400                	c.addi4spn	x8,x2,512
 4ba:	00025017          	auipc	x0,0x25
 4be:	0400                	c.addi4spn	x8,x2,512
 4c0:	026c                	c.addi4spn	x11,x2,268
 4c2:	a214                	c.fsd	f13,0(x12)
 4c4:	0006                	c.slli	x0,0x1
 4c6:	0800                	c.addi4spn	x8,x2,16
 4c8:	00021517          	auipc	x10,0x21
 4cc:	0400                	c.addi4spn	x8,x2,512
 4ce:	026c                	c.addi4spn	x11,x2,268
 4d0:	a21e                	c.fsdsp	f7,256(x2)
 4d2:	0006                	c.slli	x0,0x1
 4d4:	0c00                	c.addi4spn	x8,x2,528
 4d6:	0003b117          	auipc	x2,0x3b
 4da:	0400                	c.addi4spn	x8,x2,512
 4dc:	026e                	c.slli	x4,0x1b
 4de:	2c08                	c.fld	f10,24(x8)
 4e0:	0000                	c.unimp
 4e2:	1000                	c.addi4spn	x8,x2,32
 4e4:	0000ac17          	auipc	x24,0xa
 4e8:	0400                	c.addi4spn	x8,x2,512
 4ea:	a208026f          	jal	x4,fff8070a <_sp+0xfff7070a>
 4ee:	0008                	0x8
 4f0:	1400                	c.addi4spn	x8,x2,544
 4f2:	0003cd17          	auipc	x26,0x3c
 4f6:	0400                	c.addi4spn	x8,x2,512
 4f8:	0272                	c.slli	x4,0x1c
 4fa:	00002c07          	flw	f24,0(x0) # 0 <crt>
 4fe:	3000                	c.fld	f8,32(x8)
 500:	0003bb17          	auipc	x22,0x3b
 504:	0400                	c.addi4spn	x8,x2,512
 506:	b7160273          	0xb7160273
 50a:	0008                	0x8
 50c:	3400                	c.fld	f8,40(x8)
 50e:	00030b17          	auipc	x22,0x30
 512:	0400                	c.addi4spn	x8,x2,512
 514:	0275                	c.addi	x4,29
 516:	00002c07          	flw	f24,0(x0) # 0 <crt>
 51a:	3800                	c.fld	f8,48(x8)
 51c:	0003c317          	auipc	x6,0x3c
 520:	0400                	c.addi4spn	x8,x2,512
 522:	c80a0277          	0xc80a0277
 526:	0008                	0x8
 528:	3c00                	c.fld	f8,56(x8)
 52a:	00043c17          	auipc	x24,0x43
 52e:	0400                	c.addi4spn	x8,x2,512
 530:	027a                	c.slli	x4,0x1e
 532:	00018513          	addi	x10,x3,0 # 10c0 <__global_pointer$>
 536:	4000                	c.lw	x8,0(x8)
 538:	00023a17          	auipc	x20,0x23
 53c:	0400                	c.addi4spn	x8,x2,512
 53e:	2c07027b          	0x2c07027b
 542:	0000                	c.unimp
 544:	4400                	c.lw	x8,8(x8)
 546:	00050217          	auipc	x4,0x50
 54a:	0400                	c.addi4spn	x8,x2,512
 54c:	027c                	c.addi4spn	x15,x2,268
 54e:	00018513          	addi	x10,x3,0 # 10c0 <__global_pointer$>
 552:	4800                	c.lw	x8,16(x8)
 554:	00031d17          	auipc	x26,0x31
 558:	0400                	c.addi4spn	x8,x2,512
 55a:	027d                	c.addi	x4,31
 55c:	ce14                	c.sw	x13,24(x12)
 55e:	0008                	0x8
 560:	4c00                	c.lw	x8,24(x8)
 562:	00025817          	auipc	x16,0x25
 566:	0400                	c.addi4spn	x8,x2,512
 568:	0280                	c.addi4spn	x8,x2,320
 56a:	00002c07          	flw	f24,0(x0) # 0 <crt>
 56e:	5000                	c.lw	x8,32(x8)
 570:	0001c417          	auipc	x8,0x1c
 574:	0400                	c.addi4spn	x8,x2,512
 576:	0281                	c.addi	x5,0
 578:	b609                	c.j	7a <crt+0x7a>
 57a:	0005                	c.addi	x0,1
 57c:	5400                	c.lw	x8,40(x8)
 57e:	00034717          	auipc	x14,0x34
 582:	0400                	c.addi4spn	x8,x2,512
 584:	02a4                	c.addi4spn	x9,x2,328
 586:	00087d07          	0x87d07
 58a:	5800                	c.lw	x8,48(x8)
 58c:	f918                	c.fsw	f14,48(x10)
 58e:	0002                	c.slli64	x0
 590:	0400                	c.addi4spn	x8,x2,512
 592:	02a8                	c.addi4spn	x10,x2,328
 594:	0002b613          	sltiu	x12,x5,0
 598:	4800                	c.lw	x8,16(x8)
 59a:	1801                	c.addi	x16,-32
 59c:	0286                	c.slli	x5,0x1
 59e:	0000                	c.unimp
 5a0:	a904                	c.fsd	f9,16(x10)
 5a2:	1202                	c.slli	x4,0x20
 5a4:	00000273          	0x273
 5a8:	014c                	c.addi4spn	x11,x2,132
 5aa:	b618                	c.fsd	f14,40(x12)
 5ac:	0004                	0x4
 5ae:	0400                	c.addi4spn	x8,x2,512
 5b0:	02ad                	c.addi	x5,11
 5b2:	df0c                	c.sw	x11,56(x14)
 5b4:	0008                	0x8
 5b6:	dc00                	c.sw	x8,56(x8)
 5b8:	1802                	c.slli	x16,0x20
 5ba:	017f                	0x17f
 5bc:	0000                	c.unimp
 5be:	b204                	c.fsd	f9,32(x12)
 5c0:	1002                	c.slli	x0,0x20
 5c2:	00000663          	beq	x0,x0,5ce <impure_data+0x12e>
 5c6:	02e0                	c.addi4spn	x8,x2,332
 5c8:	6418                	c.flw	f14,8(x8)
 5ca:	0001                	c.addi	x0,0
 5cc:	0400                	c.addi4spn	x8,x2,512
 5ce:	02b4                	c.addi4spn	x13,x2,328
 5d0:	eb0a                	c.fswsp	f2,148(x2)
 5d2:	0008                	0x8
 5d4:	ec00                	c.fsw	f8,24(x8)
 5d6:	0002                	c.slli64	x0
 5d8:	05bc040f          	0x5bc040f
 5dc:	0000                	c.unimp
 5de:	0102                	c.slli64	x2
 5e0:	4208                	c.lw	x10,0(x12)
 5e2:	15000003          	lb	x0,336(x0) # 150 <bubble+0x9c>
 5e6:	05bc                	c.addi4spn	x15,x2,712
 5e8:	0000                	c.unimp
 5ea:	0444040f          	0x444040f
 5ee:	0000                	c.unimp
 5f0:	00009713          	slli	x14,x1,0x0
 5f4:	ec00                	c.fsw	f8,24(x8)
 5f6:	0005                	c.addi	x0,1
 5f8:	1400                	c.addi4spn	x8,x2,544
 5fa:	0462                	c.slli	x8,0x18
 5fc:	0000                	c.unimp
 5fe:	0514                	c.addi4spn	x13,x2,640
 600:	0001                	c.addi	x0,0
 602:	1400                	c.addi4spn	x8,x2,544
 604:	05ec                	c.addi4spn	x11,x2,716
 606:	0000                	c.unimp
 608:	2c14                	c.fld	f13,24(x8)
 60a:	0000                	c.unimp
 60c:	0000                	c.unimp
 60e:	05c3040f          	0x5c3040f
 612:	0000                	c.unimp
 614:	05ce040f          	0x5ce040f
 618:	0000                	c.unimp
 61a:	00008b13          	addi	x22,x1,0
 61e:	1600                	c.addi4spn	x8,x2,800
 620:	0006                	c.slli	x0,0x1
 622:	1400                	c.addi4spn	x8,x2,544
 624:	0462                	c.slli	x8,0x18
 626:	0000                	c.unimp
 628:	0514                	c.addi4spn	x13,x2,640
 62a:	0001                	c.addi	x0,0
 62c:	1400                	c.addi4spn	x8,x2,544
 62e:	0000008b          	0x8b
 632:	2c14                	c.fld	f13,24(x8)
 634:	0000                	c.unimp
 636:	0000                	c.unimp
 638:	05f8040f          	0x5f8040f
 63c:	0000                	c.unimp
 63e:	00002c13          	slti	x24,x0,0
 642:	3000                	c.fld	f8,32(x8)
 644:	0006                	c.slli	x0,0x1
 646:	1400                	c.addi4spn	x8,x2,544
 648:	0462                	c.slli	x8,0x18
 64a:	0000                	c.unimp
 64c:	0514                	c.addi4spn	x13,x2,640
 64e:	0001                	c.addi	x0,0
 650:	0000                	c.unimp
 652:	061c040f          	0x61c040f
 656:	0000                	c.unimp
 658:	5508                	c.lw	x10,40(x10)
 65a:	0000                	c.unimp
 65c:	4600                	c.lw	x8,8(x12)
 65e:	0006                	c.slli	x0,0x1
 660:	0900                	c.addi4spn	x8,x2,144
 662:	0025                	c.addi	x0,9
 664:	0000                	c.unimp
 666:	0002                	c.slli64	x0
 668:	5508                	c.lw	x10,40(x10)
 66a:	0000                	c.unimp
 66c:	5600                	c.lw	x8,40(x12)
 66e:	0006                	c.slli	x0,0x1
 670:	0900                	c.addi4spn	x8,x2,144
 672:	0025                	c.addi	x0,9
 674:	0000                	c.unimp
 676:	0000                	c.unimp
 678:	7604                	c.flw	f9,40(x12)
 67a:	04000003          	lb	x0,64(x0) # 40 <crt+0x40>
 67e:	0124                	c.addi4spn	x9,x2,136
 680:	011a                	c.slli	x2,0x6
 682:	19000003          	lb	x0,400(x0) # 190 <bubble+0xdc>
 686:	049d                	c.addi	x9,7
 688:	0000                	c.unimp
 68a:	040c                	c.addi4spn	x11,x2,512
 68c:	0128                	c.addi4spn	x10,x2,136
 68e:	9c08                	0x9c08
 690:	0006                	c.slli	x0,0x1
 692:	1700                	c.addi4spn	x8,x2,928
 694:	039e                	c.slli	x7,0x7
 696:	0000                	c.unimp
 698:	2a04                	c.fld	f9,16(x12)
 69a:	1101                	c.addi	x2,-32
 69c:	069c                	c.addi4spn	x15,x2,832
 69e:	0000                	c.unimp
 6a0:	1700                	c.addi4spn	x8,x2,928
 6a2:	026c                	c.addi4spn	x11,x2,268
 6a4:	0000                	c.unimp
 6a6:	2b04                	c.fld	f9,16(x14)
 6a8:	0701                	c.addi	x14,0
 6aa:	002c                	c.addi4spn	x11,x2,8
 6ac:	0000                	c.unimp
 6ae:	1704                	c.addi4spn	x9,x2,928
 6b0:	0370                	c.addi4spn	x12,x2,396
 6b2:	0000                	c.unimp
 6b4:	2c04                	c.fld	f9,24(x8)
 6b6:	0b01                	c.addi	x22,0
 6b8:	06a2                	c.slli	x13,0x8
 6ba:	0000                	c.unimp
 6bc:	0008                	0x8
 6be:	0663040f          	0x663040f
 6c2:	0000                	c.unimp
 6c4:	0656040f          	0x656040f
 6c8:	0000                	c.unimp
 6ca:	4219                	c.li	x4,6
 6cc:	0000                	c.unimp
 6ce:	0e00                	c.addi4spn	x8,x2,784
 6d0:	4404                	c.lw	x9,8(x8)
 6d2:	0801                	c.addi	x16,0
 6d4:	06e1                	c.addi	x13,24
 6d6:	0000                	c.unimp
 6d8:	0003f517          	auipc	x10,0x3f
 6dc:	0400                	c.addi4spn	x8,x2,512
 6de:	0145                	c.addi	x2,17
 6e0:	e112                	c.fswsp	f4,128(x2)
 6e2:	0006                	c.slli	x0,0x1
 6e4:	0000                	c.unimp
 6e6:	00042217          	auipc	x4,0x42
 6ea:	0400                	c.addi4spn	x8,x2,512
 6ec:	0146                	c.slli	x2,0x11
 6ee:	e112                	c.fswsp	f4,128(x2)
 6f0:	0006                	c.slli	x0,0x1
 6f2:	0600                	c.addi4spn	x8,x2,768
 6f4:	00044d17          	auipc	x26,0x44
 6f8:	0400                	c.addi4spn	x8,x2,512
 6fa:	63120147          	fmsub.d	f2,f4,f17,f12,rne
 6fe:	0000                	c.unimp
 700:	0c00                	c.addi4spn	x8,x2,528
 702:	0800                	c.addi4spn	x8,x2,16
 704:	00000063          	beq	x0,x0,704 <impure_data+0x264>
 708:	06f1                	c.addi	x13,28
 70a:	0000                	c.unimp
 70c:	2509                	c.jal	d0e <_ebss+0x40e>
 70e:	0000                	c.unimp
 710:	0200                	c.addi4spn	x8,x2,256
 712:	1a00                	c.addi4spn	x8,x2,304
 714:	04d0                	c.addi4spn	x12,x2,580
 716:	0285                	c.addi	x5,1
 718:	00080607          	0x80607
 71c:	1700                	c.addi4spn	x8,x2,928
 71e:	0481                	c.addi	x9,0
 720:	0000                	c.unimp
 722:	8704                	0x8704
 724:	1802                	c.slli	x16,0x20
 726:	0025                	c.addi	x0,9
 728:	0000                	c.unimp
 72a:	1700                	c.addi4spn	x8,x2,928
 72c:	0428                	c.addi4spn	x10,x2,520
 72e:	0000                	c.unimp
 730:	8804                	0x8804
 732:	1202                	c.slli	x4,0x20
 734:	05b6                	c.slli	x11,0xd
 736:	0000                	c.unimp
 738:	1704                	c.addi4spn	x9,x2,928
 73a:	0000029b          	0x29b
 73e:	8904                	0x8904
 740:	1002                	c.slli	x0,0x20
 742:	0806                	c.slli	x16,0x1
 744:	0000                	c.unimp
 746:	1708                	c.addi4spn	x10,x2,928
 748:	04d9                	c.addi	x9,22
 74a:	0000                	c.unimp
 74c:	8a04                	0x8a04
 74e:	1702                	c.slli	x14,0x20
 750:	0000019b          	0x19b
 754:	1724                	c.addi4spn	x9,x2,936
 756:	0225                	c.addi	x4,9
 758:	0000                	c.unimp
 75a:	8b04                	0x8b04
 75c:	0f02                	c.slli64	x30
 75e:	002c                	c.addi4spn	x11,x2,8
 760:	0000                	c.unimp
 762:	1748                	c.addi4spn	x10,x2,932
 764:	0399                	c.addi	x7,6
 766:	0000                	c.unimp
 768:	8c04                	0x8c04
 76a:	2c02                	c.fldsp	f24,0(x2)
 76c:	0078                	c.addi4spn	x14,x2,12
 76e:	0000                	c.unimp
 770:	1750                	c.addi4spn	x12,x2,932
 772:	000004ef          	jal	x9,772 <impure_data+0x2d2>
 776:	8d04                	0x8d04
 778:	1a02                	c.slli	x20,0x20
 77a:	06a8                	c.addi4spn	x10,x2,840
 77c:	0000                	c.unimp
 77e:	1758                	c.addi4spn	x14,x2,932
 780:	03a4                	c.addi4spn	x9,x2,456
 782:	0000                	c.unimp
 784:	8e04                	0x8e04
 786:	1602                	c.slli	x12,0x20
 788:	00f9                	c.addi	x1,30
 78a:	0000                	c.unimp
 78c:	1768                	c.addi4spn	x10,x2,940
 78e:	04f4                	c.addi4spn	x13,x2,588
 790:	0000                	c.unimp
 792:	8f04                	0x8f04
 794:	1602                	c.slli	x12,0x20
 796:	00f9                	c.addi	x1,30
 798:	0000                	c.unimp
 79a:	1770                	c.addi4spn	x12,x2,940
 79c:	011c                	c.addi4spn	x15,x2,128
 79e:	0000                	c.unimp
 7a0:	9004                	0x9004
 7a2:	1602                	c.slli	x12,0x20
 7a4:	00f9                	c.addi	x1,30
 7a6:	0000                	c.unimp
 7a8:	1778                	c.addi4spn	x14,x2,940
 7aa:	04ac                	c.addi4spn	x11,x2,584
 7ac:	0000                	c.unimp
 7ae:	9104                	0x9104
 7b0:	1002                	c.slli	x0,0x20
 7b2:	0816                	c.slli	x16,0x5
 7b4:	0000                	c.unimp
 7b6:	1780                	c.addi4spn	x8,x2,992
 7b8:	0000028f          	0x28f
 7bc:	9204                	0x9204
 7be:	1002                	c.slli	x0,0x20
 7c0:	0826                	c.slli	x16,0x9
 7c2:	0000                	c.unimp
 7c4:	1788                	c.addi4spn	x10,x2,992
 7c6:	045a                	c.slli	x8,0x16
 7c8:	0000                	c.unimp
 7ca:	9304                	0x9304
 7cc:	0f02                	c.slli64	x30
 7ce:	002c                	c.addi4spn	x11,x2,8
 7d0:	0000                	c.unimp
 7d2:	17a0                	c.addi4spn	x8,x2,1000
 7d4:	01e5                	c.addi	x3,25
 7d6:	0000                	c.unimp
 7d8:	9404                	0x9404
 7da:	1602                	c.slli	x12,0x20
 7dc:	00f9                	c.addi	x1,30
 7de:	0000                	c.unimp
 7e0:	17a4                	c.addi4spn	x9,x2,1000
 7e2:	010d                	c.addi	x2,3
 7e4:	0000                	c.unimp
 7e6:	9504                	0x9504
 7e8:	1602                	c.slli	x12,0x20
 7ea:	00f9                	c.addi	x1,30
 7ec:	0000                	c.unimp
 7ee:	17ac                	c.addi4spn	x11,x2,1000
 7f0:	01d4                	c.addi4spn	x13,x2,196
 7f2:	0000                	c.unimp
 7f4:	9604                	0x9604
 7f6:	1602                	c.slli	x12,0x20
 7f8:	00f9                	c.addi	x1,30
 7fa:	0000                	c.unimp
 7fc:	17b4                	c.addi4spn	x13,x2,1000
 7fe:	00c2                	c.slli	x1,0x10
 800:	0000                	c.unimp
 802:	9704                	0x9704
 804:	1602                	c.slli	x12,0x20
 806:	00f9                	c.addi	x1,30
 808:	0000                	c.unimp
 80a:	17bc                	c.addi4spn	x15,x2,1000
 80c:	00d1                	c.addi	x1,20
 80e:	0000                	c.unimp
 810:	9804                	0x9804
 812:	1602                	c.slli	x12,0x20
 814:	00f9                	c.addi	x1,30
 816:	0000                	c.unimp
 818:	17c4                	c.addi4spn	x9,x2,996
 81a:	034c                	c.addi4spn	x11,x2,388
 81c:	0000                	c.unimp
 81e:	9904                	0x9904
 820:	0802                	c.slli64	x16
 822:	002c                	c.addi4spn	x11,x2,8
 824:	0000                	c.unimp
 826:	00cc                	c.addi4spn	x11,x2,68
 828:	bc08                	c.fsd	f10,56(x8)
 82a:	0005                	c.addi	x0,1
 82c:	1600                	c.addi4spn	x8,x2,800
 82e:	0008                	0x8
 830:	0900                	c.addi4spn	x8,x2,144
 832:	0025                	c.addi	x0,9
 834:	0000                	c.unimp
 836:	0019                	c.addi	x0,6
 838:	bc08                	c.fsd	f10,56(x8)
 83a:	0005                	c.addi	x0,1
 83c:	2600                	c.fld	f8,8(x12)
 83e:	0008                	0x8
 840:	0900                	c.addi4spn	x8,x2,144
 842:	0025                	c.addi	x0,9
 844:	0000                	c.unimp
 846:	bc080007          	0xbc080007
 84a:	0005                	c.addi	x0,1
 84c:	3600                	c.fld	f8,40(x12)
 84e:	0008                	0x8
 850:	0900                	c.addi4spn	x8,x2,144
 852:	0025                	c.addi	x0,9
 854:	0000                	c.unimp
 856:	f01a0017          	auipc	x0,0xf01a0
 85a:	9e04                	0x9e04
 85c:	0702                	c.slli64	x14
 85e:	085d                	c.addi	x16,23
 860:	0000                	c.unimp
 862:	0002e917          	auipc	x18,0x2e
 866:	0400                	c.addi4spn	x8,x2,512
 868:	02a1                	c.addi	x5,8
 86a:	00085d1b          	0x85d1b
 86e:	0000                	c.unimp
 870:	0002d417          	auipc	x8,0x2d
 874:	0400                	c.addi4spn	x8,x2,512
 876:	02a2                	c.slli	x5,0x8
 878:	6d18                	c.flw	f14,24(x10)
 87a:	0008                	0x8
 87c:	7800                	c.flw	f8,48(x8)
 87e:	0800                	c.addi4spn	x8,x2,16
 880:	000002fb          	0x2fb
 884:	086d                	c.addi	x16,27
 886:	0000                	c.unimp
 888:	2509                	c.jal	e8a <_ebss+0x58a>
 88a:	0000                	c.unimp
 88c:	1d00                	c.addi4spn	x8,x2,688
 88e:	0800                	c.addi4spn	x8,x2,16
 890:	0025                	c.addi	x0,9
 892:	0000                	c.unimp
 894:	087d                	c.addi	x16,31
 896:	0000                	c.unimp
 898:	2509                	c.jal	e9a <_ebss+0x59a>
 89a:	0000                	c.unimp
 89c:	1d00                	c.addi4spn	x8,x2,688
 89e:	1b00                	c.addi4spn	x8,x2,432
 8a0:	04f0                	c.addi4spn	x12,x2,588
 8a2:	a2030283          	lb	x5,-1504(x6) # 3bf3c <_sp+0x2bf3c>
 8a6:	0008                	0x8
 8a8:	1c00                	c.addi4spn	x8,x2,560
 8aa:	03ee                	c.slli	x7,0x1b
 8ac:	0000                	c.unimp
 8ae:	9a04                	0x9a04
 8b0:	0b02                	c.slli64	x22
 8b2:	06f1                	c.addi	x13,28
 8b4:	0000                	c.unimp
 8b6:	c61c                	c.sw	x15,8(x12)
 8b8:	0004                	0x4
 8ba:	0400                	c.addi4spn	x8,x2,512
 8bc:	360b02a3          	sb	x0,869(x22) # 30873 <_sp+0x20873>
 8c0:	0008                	0x8
 8c2:	0000                	c.unimp
 8c4:	bc08                	c.fsd	f10,56(x8)
 8c6:	0005                	c.addi	x0,1
 8c8:	b200                	c.fsd	f8,32(x12)
 8ca:	0008                	0x8
 8cc:	0900                	c.addi4spn	x8,x2,144
 8ce:	0025                	c.addi	x0,9
 8d0:	0000                	c.unimp
 8d2:	0018                	0x18
 8d4:	021d                	c.addi	x4,7
 8d6:	0001                	c.addi	x0,0
 8d8:	0f00                	c.addi4spn	x8,x2,912
 8da:	b204                	c.fsd	f9,32(x12)
 8dc:	0008                	0x8
 8de:	1e00                	c.addi4spn	x8,x2,816
 8e0:	08c8                	c.addi4spn	x10,x2,84
 8e2:	0000                	c.unimp
 8e4:	6214                	c.flw	f13,0(x12)
 8e6:	0004                	0x4
 8e8:	0000                	c.unimp
 8ea:	08bd040f          	0x8bd040f
 8ee:	0000                	c.unimp
 8f0:	0185040f          	0x185040f
 8f4:	0000                	c.unimp
 8f6:	df1e                	c.swsp	x7,188(x2)
 8f8:	0008                	0x8
 8fa:	1400                	c.addi4spn	x8,x2,544
 8fc:	002c                	c.addi4spn	x11,x2,8
 8fe:	0000                	c.unimp
 900:	0f00                	c.addi4spn	x8,x2,912
 902:	e504                	c.fsw	f9,8(x10)
 904:	0008                	0x8
 906:	0f00                	c.addi4spn	x8,x2,912
 908:	d404                	c.sw	x9,40(x8)
 90a:	0008                	0x8
 90c:	0800                	c.addi4spn	x8,x2,16
 90e:	0656                	c.slli	x12,0x15
 910:	0000                	c.unimp
 912:	000008fb          	0x8fb
 916:	2509                	c.jal	f18 <_ebss+0x618>
 918:	0000                	c.unimp
 91a:	0200                	c.addi4spn	x8,x2,256
 91c:	1f00                	c.addi4spn	x8,x2,944
 91e:	0475                	c.addi	x8,29
 920:	0000                	c.unimp
 922:	3304                	c.fld	f9,32(x14)
 924:	04621703          	lh	x14,70(x4) # 4272c <_sp+0x3272c>
 928:	0000                	c.unimp
 92a:	6e1f 0004 0400      	0x40000046e1f
 930:	0334                	c.addi4spn	x13,x2,392
 932:	681d                	c.lui	x16,0x7
 934:	0004                	0x4
 936:	2000                	c.fld	f8,0(x8)
 938:	0301                	c.addi	x6,0
 93a:	0000                	c.unimp
 93c:	6706                	c.flwsp	f14,64(x2)
 93e:	b60e                	c.fsdsp	f3,296(x2)
 940:	0005                	c.addi	x0,1
 942:	2100                	c.fld	f8,0(x10)
 944:	00000507          	0x507
 948:	3301                	c.jal	648 <impure_data+0x1a8>
 94a:	2c05                	c.jal	b7a <_ebss+0x27a>
 94c:	0000                	c.unimp
 94e:	a800                	c.fsd	f8,16(x8)
 950:	0002                	c.slli64	x0
 952:	2800                	c.fld	f8,16(x8)
 954:	0001                	c.addi	x0,0
 956:	0100                	c.addi4spn	x8,x2,128
 958:	bb9c                	c.fsd	f15,48(x15)
 95a:	0009                	c.addi	x0,2
 95c:	2200                	c.fld	f8,0(x12)
 95e:	7261                	c.lui	x4,0xffff8
 960:	0072                	c.slli	x0,0x1c
 962:	3501                	c.jal	762 <impure_data+0x2c2>
 964:	bb06                	c.fsdsp	f1,432(x2)
 966:	0009                	c.addi	x0,2
 968:	0300                	c.addi4spn	x8,x2,384
 96a:	c891                	c.beqz	x9,97e <_ebss+0x7e>
 96c:	227c                	c.fld	f15,192(x12)
 96e:	0078                	c.addi4spn	x14,x2,12
 970:	3901                	c.jal	580 <impure_data+0xe0>
 972:	2c06                	c.fldsp	f24,64(x2)
 974:	0000                	c.unimp
 976:	0200                	c.addi4spn	x8,x2,256
 978:	6891                	c.lui	x17,0x4
 97a:	00043d23          	0x43d23
 97e:	0100                	c.addi4spn	x8,x2,128
 980:	002c063b          	0x2c063b
 984:	0000                	c.unimp
 986:	9102                	c.jalr	x2
 988:	2364                	c.fld	f9,192(x14)
 98a:	0435                	c.addi	x8,13
 98c:	0000                	c.unimp
 98e:	3c01                	c.jal	39e <main+0xf6>
 990:	2c06                	c.fldsp	f24,64(x2)
 992:	0000                	c.unimp
 994:	0200                	c.addi4spn	x8,x2,256
 996:	6091                	c.lui	x1,0x4
 998:	00020023          	sb	x0,0(x4) # ffff8000 <_sp+0xfffe8000>
 99c:	0100                	c.addi4spn	x8,x2,128
 99e:	063d                	c.addi	x12,15
 9a0:	002c                	c.addi4spn	x11,x2,8
 9a2:	0000                	c.unimp
 9a4:	9102                	c.jalr	x2
 9a6:	235c                	c.fld	f15,128(x14)
 9a8:	000000b7          	lui	x1,0x0
 9ac:	3e01                	c.jal	4bc <impure_data+0x1c>
 9ae:	2c06                	c.fldsp	f24,64(x2)
 9b0:	0000                	c.unimp
 9b2:	0200                	c.addi4spn	x8,x2,256
 9b4:	5891                	c.li	x17,-28
 9b6:	00026023          	0x26023
 9ba:	0100                	c.addi4spn	x8,x2,128
 9bc:	002c063f 91020000 	0x91020000002c063f
 9c4:	2454                	c.fld	f13,136(x8)
 9c6:	02b8                	c.addi4spn	x14,x2,328
 9c8:	0000                	c.unimp
 9ca:	0044                	c.addi4spn	x9,x2,4
 9cc:	0000                	c.unimp
 9ce:	6922                	c.flwsp	f18,8(x2)
 9d0:	0100                	c.addi4spn	x8,x2,128
 9d2:	0b36                	c.slli	x22,0xd
 9d4:	002c                	c.addi4spn	x11,x2,8
 9d6:	0000                	c.unimp
 9d8:	9102                	c.jalr	x2
 9da:	006c                	c.addi4spn	x11,x2,12
 9dc:	0800                	c.addi4spn	x8,x2,16
 9de:	002c                	c.addi4spn	x11,x2,8
 9e0:	0000                	c.unimp
 9e2:	000009cb          	fnmsub.s	f19,f0,f0,f0,rne
 9e6:	2509                	c.jal	fe8 <_ebss+0x6e8>
 9e8:	0000                	c.unimp
 9ea:	6200                	c.flw	f8,0(x12)
 9ec:	2100                	c.fld	f8,0(x10)
 9ee:	0141                	c.addi	x2,16
 9f0:	0000                	c.unimp
 9f2:	1b01                	c.addi	x22,-32
 9f4:	2c05                	c.jal	c24 <_ebss+0x324>
 9f6:	0000                	c.unimp
 9f8:	ac00                	c.fsd	f8,24(x8)
 9fa:	0001                	c.addi	x0,0
 9fc:	fc00                	c.fsw	f8,56(x8)
 9fe:	0000                	c.unimp
 a00:	0100                	c.addi4spn	x8,x2,128
 a02:	359c                	c.fld	f15,40(x11)
 a04:	000a                	c.slli	x0,0x2
 a06:	2500                	c.fld	f8,8(x10)
 a08:	7261                	c.lui	x4,0xffff8
 a0a:	0072                	c.slli	x0,0x1c
 a0c:	1b01                	c.addi	x22,-32
 a0e:	3516                	c.fldsp	f10,352(x2)
 a10:	000a                	c.slli	x0,0x2
 a12:	0200                	c.addi4spn	x8,x2,256
 a14:	5c91                	c.li	x25,-28
 a16:	6c25                	c.lui	x24,0x9
 a18:	0100                	c.addi4spn	x8,x2,128
 a1a:	002c211b          	0x2c211b
 a1e:	0000                	c.unimp
 a20:	9102                	c.jalr	x2
 a22:	2558                	c.fld	f14,136(x10)
 a24:	0072                	c.slli	x0,0x1c
 a26:	1b01                	c.addi	x22,-32
 a28:	2c28                	c.fld	f10,88(x8)
 a2a:	0000                	c.unimp
 a2c:	0200                	c.addi4spn	x8,x2,256
 a2e:	5491                	c.li	x9,-28
 a30:	7825                	c.lui	x16,0xfffe9
 a32:	0100                	c.addi4spn	x8,x2,128
 a34:	002c2f1b          	0x2c2f1b
 a38:	0000                	c.unimp
 a3a:	9102                	c.jalr	x2
 a3c:	2450                	c.fld	f12,136(x8)
 a3e:	01d8                	c.addi4spn	x14,x2,196
 a40:	0000                	c.unimp
 a42:	00b8                	c.addi4spn	x14,x2,72
 a44:	0000                	c.unimp
 a46:	6d22                	c.flwsp	f26,8(x2)
 a48:	6469                	c.lui	x8,0x1a
 a4a:	0100                	c.addi4spn	x8,x2,128
 a4c:	071d                	c.addi	x14,7
 a4e:	002c                	c.addi4spn	x11,x2,8
 a50:	0000                	c.unimp
 a52:	9102                	c.jalr	x2
 a54:	006c                	c.addi4spn	x11,x2,12
 a56:	0f00                	c.addi4spn	x8,x2,912
 a58:	2c04                	c.fld	f9,24(x8)
 a5a:	0000                	c.unimp
 a5c:	2600                	c.fld	f8,8(x12)
 a5e:	00000467          	jalr	x8,0(x0) # 0 <crt>
 a62:	0d01                	c.addi	x26,0
 a64:	b406                	c.fsdsp	f1,40(x2)
 a66:	0000                	c.unimp
 a68:	f800                	c.fsw	f8,48(x8)
 a6a:	0000                	c.unimp
 a6c:	0100                	c.addi4spn	x8,x2,128
 a6e:	259c                	c.fld	f15,8(x11)
 a70:	7261                	c.lui	x4,0xffff8
 a72:	0072                	c.slli	x0,0x1c
 a74:	0d01                	c.addi	x26,0
 a76:	3511                	c.jal	87a <impure_data+0x3da>
 a78:	000a                	c.slli	x0,0x2
 a7a:	0200                	c.addi4spn	x8,x2,256
 a7c:	5c91                	c.li	x25,-28
 a7e:	00003d27          	fsd	f0,26(x0) # 1a <crt+0x1a>
 a82:	0100                	c.addi4spn	x8,x2,128
 a84:	1c0d                	c.addi	x24,-29
 a86:	002c                	c.addi4spn	x11,x2,8
 a88:	0000                	c.unimp
 a8a:	9102                	c.jalr	x2
 a8c:	2458                	c.fld	f14,136(x8)
 a8e:	00c8                	c.addi4spn	x10,x2,68
 a90:	0000                	c.unimp
 a92:	00d0                	c.addi4spn	x12,x2,68
 a94:	0000                	c.unimp
 a96:	6922                	c.flwsp	f18,8(x2)
 a98:	0100                	c.addi4spn	x8,x2,128
 a9a:	002c0a0f          	0x2c0a0f
 a9e:	0000                	c.unimp
 aa0:	9102                	c.jalr	x2
 aa2:	246c                	c.fld	f11,200(x8)
 aa4:	00d0                	c.addi4spn	x12,x2,68
 aa6:	0000                	c.unimp
 aa8:	00ac                	c.addi4spn	x11,x2,72
 aaa:	0000                	c.unimp
 aac:	6a22                	c.flwsp	f20,8(x2)
 aae:	0100                	c.addi4spn	x8,x2,128
 ab0:	0b10                	c.addi4spn	x12,x2,400
 ab2:	002c                	c.addi4spn	x11,x2,8
 ab4:	0000                	c.unimp
 ab6:	9102                	c.jalr	x2
 ab8:	2468                	c.fld	f10,200(x8)
 aba:	010c                	c.addi4spn	x11,x2,128
 abc:	0000                	c.unimp
 abe:	0058                	c.addi4spn	x14,x2,4
 ac0:	0000                	c.unimp
 ac2:	00018723          	sb	x0,14(x3) # 10ce <__global_pointer$+0xe>
 ac6:	0100                	c.addi4spn	x8,x2,128
 ac8:	0912                	c.slli	x18,0x4
 aca:	002c                	c.addi4spn	x11,x2,8
 acc:	0000                	c.unimp
 ace:	9102                	c.jalr	x2
 ad0:	0064                	c.addi4spn	x9,x2,12
 ad2:	0000                	c.unimp
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
	nop
   0:	1101                	c.addi	x2,-32
   2:	1000                	c.addi4spn	x8,x2,32
	la ra, exit
   4:	5506                	c.lwsp	x10,96(x2)
   6:	0306                	c.slli	x6,0x1
   8:	1b0e                	c.slli	x22,0x23
   a:	250e                	c.fldsp	f10,192(x2)
	la sp, _sp
   c:	130e                	c.slli	x6,0x23
   e:	0005                	c.addi	x0,1
  10:	0000                	c.unimp
  12:	1101                	c.addi	x2,-32
	mv s0, sp
  14:	2501                	c.jal	614 <impure_data+0x174>
  16:	130e                	c.slli	x6,0x23
	la gp, __global_pointer$
  18:	1b0e030b          	0x1b0e030b
  1c:	110e                	c.slli	x2,0x23
  1e:	1201                	c.addi	x4,-32
	li tp, 0
  20:	1006                	c.slli	x0,0x21
  22:	02000017          	auipc	x0,0x2000
	li t0, 0
  26:	0024                	c.addi4spn	x9,x2,8
	li t1, 0
  28:	0b3e0b0b          	0xb3e0b0b
	li t2, 0
  2c:	00000e03          	lb	x28,0(x0) # 0 <crt>
	li s1, 0
  30:	0b002403          	lw	x8,176(x0) # b0 <exit+0x10>
	li a0, 0
  34:	030b3e0b          	0x30b3e0b
	li a1, 0
  38:	0008                	0x8
  3a:	0400                	c.addi4spn	x8,x2,512
	li a2, 0
  3c:	0016                	c.slli	x0,0x5
  3e:	0b3a0e03          	lb	x28,179(x20) # 235eb <_sp+0x135eb>
	li a3, 0
  42:	0b39053b          	0xb39053b
	li a4, 0
  46:	1349                	c.addi	x6,-14
	li a5, 0
  48:	0000                	c.unimp
  4a:	1605                	c.addi	x12,-31
	li a6, 0
  4c:	0300                	c.addi4spn	x8,x2,384
  4e:	3a0e                	c.fldsp	f20,224(x2)
	li a7, 0
  50:	390b3b0b          	0x390b3b0b
	li s2, 0
  54:	0013490b          	0x13490b
	li s3, 0
  58:	0600                	c.addi4spn	x8,x2,768
  5a:	0b0b0117          	auipc	x2,0xb0b0
	li s4, 0
  5e:	0b3a                	c.slli	x22,0xe
	li s5, 0
  60:	0b390b3b          	0xb390b3b
	li s6, 0
  64:	1301                	c.addi	x6,-32
  66:	0000                	c.unimp
	li s7, 0
  68:	03000d07          	0x3000d07
	li s8, 0
  6c:	3a0e                	c.fldsp	f20,224(x2)
  6e:	390b3b0b          	0x390b3b0b
	li s9, 0
  72:	0013490b          	0x13490b
	li s10, 0
  76:	0800                	c.addi4spn	x8,x2,16
	li s11, 0
  78:	0101                	c.addi	x2,0
  7a:	1349                	c.addi	x6,-14
	li t3, 0
  7c:	1301                	c.addi	x6,-32
  7e:	0000                	c.unimp
	li t4, 0
  80:	2109                	c.jal	482 <_global_impure_ptr+0x2>
  82:	4900                	c.lw	x8,16(x10)
	li t5, 0
  84:	000b2f13          	slti	x30,x22,0
	li t6, 0
  88:	0a00                	c.addi4spn	x8,x2,272
  8a:	0b0b0113          	addi	x2,x22,176
	j main
  8e:	0b3a                	c.slli	x22,0xe
  90:	0b390b3b          	0xb390b3b
  94:	1301                	c.addi	x6,-32
  96:	0000                	c.unimp
  98:	03000d0b          	0x3000d0b
  9c:	3a0e                	c.fldsp	f20,224(x2)
  9e:	390b3b0b          	0x390b3b0b
	la sp, _sp
  a2:	3813490b          	0x3813490b
  a6:	0c00000b          	0xc00000b
	sw a0, -8(sp)
  aa:	0b0b000f          	0xb0b000f
	nop
  ae:	0000                	c.unimp
	wfi
  b0:	130d                	c.addi	x6,-29
  b2:	0301                	c.addi	x6,0
void bubble(int arr[], int size) {
  b4:	0b0e                	c.slli	x22,0x3
  b6:	3b0b3a0b          	0x3b0b3a0b
  ba:	010b390b          	0x10b390b
  be:	0e000013          	addi	x0,x0,224
  c2:	000d                	c.addi	x0,3
  c4:	0b3a0803          	lb	x16,179(x20)
	for(int i = 0; i < (size-1); i++)
  c8:	0b390b3b          	0xb390b3b
  cc:	1349                	c.addi	x6,-14
  ce:	0b38                	c.addi4spn	x14,x2,408
		for(int j = i+1; j< size; j++)
  d0:	0000                	c.unimp
  d2:	0b000f0f          	0xb000f0f
  d6:	0013490b          	0x13490b
  da:	1000                	c.addi4spn	x8,x2,32
  dc:	0e030113          	addi	x2,x6,224
			if(arr[j] < arr[i]){
  e0:	0b3a050b          	0xb3a050b
  e4:	0b390b3b          	0xb390b3b
  e8:	1301                	c.addi	x6,-32
  ea:	0000                	c.unimp
  ec:	0d11                	c.addi	x26,4
  ee:	0300                	c.addi4spn	x8,x2,384
  f0:	3a0e                	c.fldsp	f20,224(x2)
  f2:	390b3b0b          	0x390b3b0b
  f6:	3813490b          	0x3813490b
  fa:	0005                	c.addi	x0,1
  fc:	1200                	c.addi4spn	x8,x2,288
  fe:	0015                	c.addi	x0,5
 100:	00001927          	0x1927
 104:	27011513          	0x27011513
 108:	4919                	c.li	x18,6
 10a:	00130113          	addi	x2,x6,1
				int temp = arr[j];
 10e:	1400                	c.addi4spn	x8,x2,544
 110:	0005                	c.addi	x0,1
 112:	1349                	c.addi	x6,-14
 114:	0000                	c.unimp
 116:	2615                	c.jal	43a <rand+0x56>
 118:	4900                	c.lw	x8,16(x10)
 11a:	16000013          	addi	x0,x0,352
 11e:	0e030113          	addi	x2,x6,224
 122:	0b3a050b          	0xb3a050b
				arr[j] = arr[i];
 126:	0b39053b          	0xb39053b
 12a:	1301                	c.addi	x6,-32
 12c:	0000                	c.unimp
 12e:	03000d17          	auipc	x26,0x3000
 132:	3a0e                	c.fldsp	f20,224(x2)
 134:	39053b0b          	0x39053b0b
 138:	3813490b          	0x3813490b
 13c:	1800000b          	0x1800000b
 140:	000d                	c.addi	x0,3
 142:	0b3a0e03          	lb	x28,179(x20)
 146:	0b39053b          	0xb39053b
 14a:	1349                	c.addi	x6,-14
				arr[i] = temp;
 14c:	0538                	c.addi4spn	x14,x2,648
 14e:	0000                	c.unimp
 150:	1319                	c.addi	x6,-26
 152:	0301                	c.addi	x6,0
 154:	0b0e                	c.slli	x22,0x3
 156:	3b0b3a0b          	0x3b0b3a0b
 15a:	3905                	c.jal	fffffd8a <_sp+0xfffefd8a>
 15c:	0013010b          	0x13010b
 160:	1a00                	c.addi4spn	x8,x2,304
 162:	0b0b0113          	addi	x2,x22,176
		for(int j = i+1; j< size; j++)
 166:	0b3a                	c.slli	x22,0xe
 168:	0b39053b          	0xb39053b
 16c:	1301                	c.addi	x6,-32
 16e:	0000                	c.unimp
 170:	0b01171b          	0xb01171b
 174:	3b0b3a0b          	0x3b0b3a0b
 178:	3905                	c.jal	fffffda8 <_sp+0xfffefda8>
 17a:	0013010b          	0x13010b
	for(int i = 0; i < (size-1); i++)
 17e:	1c00                	c.addi4spn	x8,x2,560
 180:	000d                	c.addi	x0,3
 182:	0b3a0e03          	lb	x28,179(x20)
 186:	0b39053b          	0xb39053b
 18a:	1349                	c.addi	x6,-14
 18c:	0000                	c.unimp
 18e:	131d                	c.addi	x6,-25
 190:	0300                	c.addi4spn	x8,x2,384
 192:	3c0e                	c.fldsp	f24,224(x2)
 194:	0019                	c.addi	x0,6
 196:	1e00                	c.addi4spn	x8,x2,816
}
 198:	0115                	c.addi	x2,5
 19a:	13011927          	0x13011927
 19e:	0000                	c.unimp
 1a0:	341f 0300 3a0e      	0x3a0e0300341f
 1a6:	39053b0b          	0x39053b0b
 1aa:	3f13490b          	0x3f13490b
int binarySearch(int arr[], int l, int r, int x) { 
 1ae:	3c19                	c.jal	fffffbc4 <_sp+0xfffefbc4>
 1b0:	0019                	c.addi	x0,6
 1b2:	2000                	c.fld	f8,0(x8)
 1b4:	0034                	c.addi4spn	x13,x2,8
 1b6:	0b3a0e03          	lb	x28,179(x20)
 1ba:	0b390b3b          	0xb390b3b
 1be:	1349                	c.addi	x6,-14
 1c0:	193c193f 2e210000 	0x2e210000193c193f
 1c8:	3f01                	c.jal	d8 <bubble+0x24>
 1ca:	0319                	c.addi	x6,6
	if (r >= l) { 
 1cc:	3a0e                	c.fldsp	f20,224(x2)
 1ce:	390b3b0b          	0x390b3b0b
 1d2:	4919270b          	0x4919270b
 1d6:	12011113          	0x12011113
		int mid = l + (r - l) / 2; 
 1da:	4006                	0x4006
 1dc:	9618                	0x9618
 1de:	1942                	c.slli	x18,0x30
 1e0:	1301                	c.addi	x6,-32
 1e2:	0000                	c.unimp
 1e4:	3422                	c.fldsp	f8,40(x2)
 1e6:	0300                	c.addi4spn	x8,x2,384
 1e8:	3a08                	c.fld	f10,48(x12)
 1ea:	390b3b0b          	0x390b3b0b
 1ee:	0213490b          	0x213490b
 1f2:	0018                	0x18
 1f4:	2300                	c.fld	f8,0(x14)
 1f6:	0034                	c.addi4spn	x13,x2,8
 1f8:	0b3a0e03          	lb	x28,179(x20)
 1fc:	0b390b3b          	0xb390b3b
		if (arr[mid] == x) 
 200:	1349                	c.addi	x6,-14
 202:	1802                	c.slli	x16,0x20
 204:	0000                	c.unimp
 206:	0b24                	c.addi4spn	x9,x2,408
 208:	1101                	c.addi	x2,-32
 20a:	1201                	c.addi	x4,-32
 20c:	0006                	c.slli	x0,0x1
 20e:	2500                	c.fld	f8,8(x10)
 210:	0005                	c.addi	x0,1
 212:	0b3a0803          	lb	x16,179(x20)
 216:	0b390b3b          	0xb390b3b
 21a:	1349                	c.addi	x6,-14
			return mid; 
 21c:	1802                	c.slli	x16,0x20
 21e:	0000                	c.unimp
 220:	2e26                	c.fldsp	f28,72(x2)
 222:	3f01                	c.jal	132 <bubble+0x7e>
		if (arr[mid] > x) 
 224:	0319                	c.addi	x6,6
 226:	3a0e                	c.fldsp	f20,224(x2)
 228:	390b3b0b          	0x390b3b0b
 22c:	1119270b          	0x1119270b
 230:	1201                	c.addi	x4,-32
 232:	4006                	0x4006
 234:	9718                	0x9718
 236:	1942                	c.slli	x18,0x30
 238:	0000                	c.unimp
 23a:	03000527          	0x3000527
 23e:	3a0e                	c.fldsp	f20,224(x2)
			return binarySearch(arr, l, mid - 1, x); 
 240:	390b3b0b          	0x390b3b0b
 244:	0213490b          	0x213490b
 248:	0018                	0x18
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
	nop
   0:	0024                	c.addi4spn	x9,x2,8
   2:	0000                	c.unimp
	la ra, exit
   4:	0002                	c.slli64	x0
   6:	0000                	c.unimp
   8:	0000                	c.unimp
   a:	0004                	0x4
	...
	mv s0, sp
  14:	0090                	c.addi4spn	x12,x2,64
  16:	0000                	c.unimp
	la gp, __global_pointer$
  18:	00a0                	c.addi4spn	x8,x2,72
  1a:	0000                	c.unimp
  1c:	0014                	0x14
	...
	li t0, 0
  26:	0000                	c.unimp
	li t1, 0
  28:	001c                	0x1c
  2a:	0000                	c.unimp
	li t2, 0
  2c:	0002                	c.slli64	x0
  2e:	0022                	c.slli	x0,0x8
	li s1, 0
  30:	0000                	c.unimp
  32:	0004                	0x4
	li a0, 0
  34:	0000                	c.unimp
  36:	0000                	c.unimp
	li a1, 0
  38:	00b4                	c.addi4spn	x13,x2,72
  3a:	0000                	c.unimp
	li a2, 0
  3c:	031c                	c.addi4spn	x15,x2,384
	...

Disassembly of section .debug_str:

00000000 <.debug_str>:
	nop
   0:	2e747263          	bgeu	x8,x7,2e4 <main+0x3c>
	la ra, exit
   4:	682f0073          	0x682f0073
   8:	2f656d6f          	jal	x26,562fe <_sp+0x462fe>
	la sp, _sp
   c:	6368                	c.flw	f10,68(x14)
   e:	6179                	c.addi16sp	x2,464
  10:	676e                	c.flwsp	f14,216(x2)
  12:	6469562f          	0x6469562f
	mv s0, sp
  16:	6f65                	c.lui	x30,0x19
	la gp, __global_pointer$
  18:	72672f73          	csrrs	x30,0x726,x14
  1c:	3770756f          	jal	x10,7b92 <__global_pointer$+0x6ad2>
	li tp, 0
  20:	00303277          	0x303277
	li t0, 0
  24:	20554e47          	fmsub.s	f28,f10,f5,f4,rmm
	li t1, 0
  28:	5341                	c.li	x6,-16
  2a:	3220                	c.fld	f8,96(x12)
	li t2, 0
  2c:	332e                	c.fldsp	f6,232(x2)
  2e:	0034                	c.addi4spn	x13,x2,8
	li s1, 0
  30:	645f 6f73 685f      	0x685f6f73645f
	li a0, 0
  36:	6e61                	c.lui	x28,0x18
	li a1, 0
  38:	6c64                	c.flw	f9,92(x8)
  3a:	0065                	c.addi	x0,25
	li a2, 0
  3c:	735f 7a69 0065      	0x657a69735f
	li a3, 0
  42:	725f 6e61 3464      	0x34646e61725f
	li a5, 0
  48:	0038                	c.addi4spn	x14,x2,8
  4a:	20554e47          	fmsub.s	f28,f10,f5,f4,rmm
	li a6, 0
  4e:	20313143          	fmadd.s	f2,f2,f3,f4,rup
	li a7, 0
  52:	2e39                	c.jal	370 <main+0xc8>
	li s2, 0
  54:	2e32                	c.fldsp	f28,264(x2)
  56:	2030                	c.fld	f12,64(x8)
	li s3, 0
  58:	6d2d                	c.lui	x26,0xb
  5a:	6f6e                	c.flwsp	f30,216(x2)
	li s4, 0
  5c:	722d                	c.lui	x4,0xfffeb
  5e:	6c65                	c.lui	x24,0x19
	li s5, 0
  60:	7861                	c.lui	x16,0xffff8
  62:	2d20                	c.fld	f8,88(x10)
	li s6, 0
  64:	616d                	c.addi16sp	x2,240
  66:	6372                	c.flwsp	f6,28(x2)
	li s7, 0
  68:	3d68                	c.fld	f10,248(x10)
  6a:	7672                	c.flwsp	f12,60(x2)
	li s8, 0
  6c:	6d693233          	0x6d693233
	li s9, 0
  70:	2d20                	c.fld	f8,88(x10)
  72:	616d                	c.addi16sp	x2,240
	li s10, 0
  74:	6962                	c.flwsp	f18,24(x2)
  76:	693d                	c.lui	x18,0xf
	li s11, 0
  78:	706c                	c.flw	f11,100(x8)
  7a:	2d203233          	0x2d203233
	li t3, 0
  7e:	736d                	c.lui	x6,0xffffb
	li t4, 0
  80:	7274                	c.flw	f13,100(x12)
  82:	6369                	c.lui	x6,0x1a
	li t5, 0
  84:	2d74                	c.fld	f13,216(x10)
  86:	6c61                	c.lui	x24,0x18
	li t6, 0
  88:	6769                	c.lui	x14,0x1a
  8a:	206e                	c.fldsp	f0,216(x2)
	j main
  8c:	6d2d                	c.lui	x26,0xb
  8e:	7574                	c.flw	f13,108(x10)
  90:	656e                	c.flwsp	f10,216(x2)
  92:	723d                	c.lui	x4,0xfffef
  94:	656b636f          	jal	x6,b66ea <_sp+0xa66ea>
  98:	2074                	c.fld	f13,192(x8)
  9a:	672d                	c.lui	x14,0xb
  9c:	2d20                	c.fld	f8,88(x10)
  9e:	2d20304f          	0x2d20304f
	la sp, _sp
  a2:	3d647473          	csrrci	x8,0x3d6,8
  a6:	31756e67          	0x31756e67
	sw a0, -8(sp)
  aa:	0031                	c.addi	x0,12
	nop
  ac:	655f 656d 6772      	0x6772656d655f
	wfi
  b2:	6e65                	c.lui	x28,0x19
void bubble(int arr[], int size) {
  b4:	67007963          	bgeu	x0,x16,726 <impure_data+0x286>
  b8:	0074616f          	jal	x2,468be <_sp+0x368be>
  bc:	645f 7461 0061      	0x617461645f
  c2:	775f 7263 6f74      	0x6f747263775f
	for(int i = 0; i < (size-1); i++)
  c8:	626d                	c.lui	x4,0x1b
  ca:	735f 6174 6574      	0x65746174735f
		for(int j = i+1; j< size; j++)
  d0:	5f00                	c.lw	x8,56(x14)
  d2:	72736377          	0x72736377
  d6:	6f74                	c.flw	f13,92(x14)
  d8:	626d                	c.lui	x4,0x1b
  da:	74735f73          	csrrwi	x30,0x747,6
  de:	7461                	c.lui	x8,0xffff8
			if(arr[j] < arr[i]){
  e0:	0065                	c.addi	x0,25
  e2:	6f6c                	c.flw	f11,92(x14)
  e4:	676e                	c.flwsp	f14,216(x2)
  e6:	6c20                	c.flw	f8,88(x8)
  e8:	20676e6f          	jal	x28,762ee <_sp+0x662ee>
  ec:	6e75                	c.lui	x28,0x1d
  ee:	6e676973          	csrrsi	x18,0x6e6,14
  f2:	6465                	c.lui	x8,0x19
  f4:	6920                	c.flw	f8,80(x10)
  f6:	746e                	c.flwsp	f8,248(x2)
  f8:	5f00                	c.lw	x8,56(x14)
  fa:	626c                	c.flw	f11,68(x12)
  fc:	7366                	c.flwsp	f6,120(x2)
  fe:	7a69                	c.lui	x20,0xffffa
 100:	0065                	c.addi	x0,25
 102:	5f5f 6f6c 6163      	0x61636f6c5f5f
 108:	656c                	c.flw	f11,76(x10)
 10a:	745f 5f00 626d      	0x626d5f00745f
				int temp = arr[j];
 110:	7472                	c.flwsp	f8,60(x2)
 112:	5f63776f          	jal	x14,37708 <_sp+0x27708>
 116:	74617473          	csrrci	x8,0x746,2
 11a:	0065                	c.addi	x0,25
 11c:	775f 7463 6d6f      	0x6d6f7463775f
 122:	5f62                	c.lwsp	x30,56(x2)
				arr[j] = arr[i];
 124:	74617473          	csrrci	x8,0x746,2
 128:	0065                	c.addi	x0,25
 12a:	5f5f 6d74 735f      	0x735f6d745f5f
 130:	6365                	c.lui	x6,0x19
 132:	6c00                	c.flw	f8,24(x8)
 134:	20676e6f          	jal	x28,7633a <_sp+0x6633a>
 138:	6f6c                	c.flw	f11,92(x14)
 13a:	676e                	c.flwsp	f14,216(x2)
 13c:	6920                	c.flw	f8,80(x10)
 13e:	746e                	c.flwsp	f8,248(x2)
 140:	6200                	c.flw	f8,0(x12)
 142:	6e69                	c.lui	x28,0x1a
 144:	7261                	c.lui	x4,0xffff8
 146:	5379                	c.li	x6,-2
 148:	6165                	c.addi16sp	x2,112
 14a:	6372                	c.flwsp	f6,28(x2)
				arr[i] = temp;
 14c:	0068                	c.addi4spn	x10,x2,12
 14e:	755f 7562 0066      	0x667562755f
 154:	625f 7361 0065      	0x657361625f
 15a:	5f5f 6d74 685f      	0x685f6d745f5f
 160:	0072756f          	jal	x10,27966 <_sp+0x17966>
		for(int j = i+1; j< size; j++)
 164:	5f5f 6673 5f00      	0x5f0066735f5f
 16a:	655f6e6f          	jal	x28,f6fbe <_sp+0xe6fbe>
 16e:	6978                	c.flw	f14,84(x10)
 170:	5f74                	c.lw	x13,124(x14)
 172:	7261                	c.lui	x4,0xffff8
 174:	5f007367          	0x5f007367
 178:	6b6f6f63          	bltu	x30,x22,836 <impure_data+0x396>
	for(int i = 0; i < (size-1); i++)
 17c:	6569                	c.lui	x10,0x1a
 17e:	5f00                	c.lw	x8,56(x14)
 180:	735f 6c67 6575      	0x65756c67735f
 186:	7400                	c.flw	f8,40(x8)
 188:	6d65                	c.lui	x26,0x19
 18a:	0070                	c.addi4spn	x12,x2,12
 18c:	665f 616c 7367      	0x7367616c665f
 192:	5f00                	c.lw	x8,56(x14)
 194:	7369                	c.lui	x6,0xffffa
 196:	635f 6178 5f00      	0x5f006178635f
}
 19c:	69647473          	csrrci	x8,0x696,8
 1a0:	006e                	c.slli	x0,0x1b
 1a2:	625f 6b6c 6973      	0x69736b6c625f
 1a8:	657a                	c.flwsp	f10,156(x2)
 1aa:	7400                	c.flw	f8,40(x8)
int binarySearch(int arr[], int l, int r, int x) { 
 1ac:	7365                	c.lui	x6,0xffff9
 1ae:	5f74                	c.lw	x13,124(x14)
 1b0:	7270                	c.flw	f12,100(x12)
 1b2:	2f73676f          	jal	x14,36ca8 <_sp+0x26ca8>
 1b6:	74726f73          	csrrsi	x30,0x747,4
 1ba:	735f 6165 6372      	0x63726165735f
 1c0:	2e68                	c.fld	f10,216(x12)
 1c2:	635f0063          	beq	x30,x21,7e2 <impure_data+0x342>
 1c6:	7476                	c.flwsp	f8,124(x2)
 1c8:	7562                	c.flwsp	f10,56(x2)
 1ca:	0066                	c.slli	x0,0x19
	if (r >= l) { 
 1cc:	6f5f 6666 6573      	0x657366666f5f
 1d2:	0074                	c.addi4spn	x13,x2,12
 1d4:	6d5f 7362 7472      	0x747273626d5f
		int mid = l + (r - l) / 2; 
 1da:	7363776f          	jal	x14,37910 <_sp+0x27910>
 1de:	735f 6174 6574      	0x65746174735f
 1e4:	5f00                	c.lw	x8,56(x14)
 1e6:	626d                	c.lui	x4,0x1b
 1e8:	6c72                	c.flwsp	f24,28(x2)
 1ea:	6e65                	c.lui	x28,0x19
 1ec:	735f 6174 6574      	0x65746174735f
 1f2:	5f00                	c.lw	x8,56(x14)
 1f4:	6e66                	c.flwsp	f28,88(x2)
 1f6:	7261                	c.lui	x4,0xffff8
 1f8:	5f007367          	0x5f007367
 1fc:	6e66                	c.flwsp	f28,88(x2)
 1fe:	616c0073          	0x616c0073
		if (arr[mid] == x) 
 202:	7272                	c.flwsp	f4,60(x2)
 204:	0079                	c.addi	x0,30
 206:	735f 6769 006e      	0x6e6769735f
 20c:	665f 6f6c 6b63      	0x6b636f6c665f
 212:	745f 5f00 7473      	0x74735f00745f
 218:	6564                	c.flw	f9,76(x10)
 21a:	7272                	c.flwsp	f4,60(x2)
			return mid; 
 21c:	5f00                	c.lw	x8,56(x14)
 21e:	6942                	c.flwsp	f18,16(x2)
 220:	746e6967          	0x746e6967
		if (arr[mid] > x) 
 224:	5f00                	c.lw	x8,56(x14)
 226:	6d6d6167          	0x6d6d6167
 22a:	5f61                	c.li	x30,-8
 22c:	6e676973          	csrrsi	x18,0x6e6,14
 230:	006d6167          	0x6d6167
 234:	725f 6165 0064      	0x646165725f
 23a:	725f 7365 6c75      	0x6c757365725f
			return binarySearch(arr, l, mid - 1, x); 
 240:	5f74                	c.lw	x13,124(x14)
 242:	5f5f006b          	0x5f5f006b
 246:	6d74                	c.flw	f13,92(x10)
 248:	5f00                	c.lw	x8,56(x14)
 24a:	775f 6863 0062      	0x626863775f
 250:	735f 6474 756f      	0x756f6474735f
 256:	0074                	c.addi4spn	x13,x2,12
 258:	635f 7476 656c      	0x656c7476635f
 25e:	006e                	c.slli	x0,0x1b
 260:	7262                	c.flwsp	f4,56(x2)
 262:	6461                	c.lui	x8,0x18
 264:	0079                	c.addi	x0,30
 266:	665f 6c69 0065      	0x656c69665f
		return binarySearch(arr, mid + 1, r, x); 
 26c:	6e5f 6f69 7362      	0x73626f696e5f
 272:	7300                	c.flw	f8,32(x14)
 274:	6f68                	c.flw	f10,92(x14)
 276:	7472                	c.flwsp	f8,60(x2)
 278:	7520                	c.flw	f8,104(x10)
 27a:	736e                	c.flwsp	f6,248(x2)
 27c:	6769                	c.lui	x14,0x1a
 27e:	656e                	c.flwsp	f10,216(x2)
 280:	2064                	c.fld	f9,192(x8)
 282:	6e69                	c.lui	x28,0x1a
 284:	0074                	c.addi4spn	x13,x2,12
 286:	615f 6574 6978      	0x69786574615f
 28c:	3074                	c.fld	f13,224(x8)
 28e:	5f00                	c.lw	x8,56(x14)
	return -1; 
 290:	6e676973          	csrrsi	x18,0x6e6,14
} 
 294:	6c61                	c.lui	x24,0x18
 296:	625f 6675 5f00      	0x5f006675625f
 29c:	7361                	c.lui	x6,0xffff8
 29e:	6d697463          	bgeu	x18,x22,966 <_ebss+0x66>
 2a2:	5f65                	c.li	x30,-7
 2a4:	7562                	c.flwsp	f10,56(x2)
 2a6:	0066                	c.slli	x0,0x19
int main(void) { 
 2a8:	5f5f 6377 0068      	0x6863775f5f
 2ae:	746e6977          	0x746e6977
 2b2:	745f 5f00 6f6c      	0x6f6c5f00745f
	for (int i = 0; i < N; ++i)
 2b8:	5f006b63          	bltu	x0,x16,8ae <impure_data+0x40e>
 2bc:	6c66                	c.flwsp	f24,88(x2)
 2be:	6761                	c.lui	x14,0x18
		arr[i] = rand() & (31);
 2c0:	5f003273          	csrrc	x4,0x5f0,x0
 2c4:	74697277          	0x74697277
 2c8:	0065                	c.addi	x0,25
 2ca:	5f5f 6d74 795f      	0x795f6d745f5f
 2d0:	6165                	c.addi16sp	x2,112
 2d2:	0072                	c.slli	x0,0x1c
 2d4:	6e5f 616d 6c6c      	0x6c6c616d6e5f
 2da:	6c00636f          	jal	x6,699a <__global_pointer$+0x58da>
 2de:	20676e6f          	jal	x28,764e4 <_sp+0x664e4>
 2e2:	6f64                	c.flw	f9,92(x14)
	for (int i = 0; i < N; ++i)
 2e4:	6275                	c.lui	x4,0x1d
 2e6:	656c                	c.flw	f11,76(x10)
 2e8:	5f00                	c.lw	x8,56(x14)
 2ea:	656e                	c.flwsp	f10,216(x2)
 2ec:	7478                	c.flw	f14,108(x8)
 2ee:	0066                	c.slli	x0,0x19
 2f0:	5f5f 6d74 6d5f      	0x6d5f6d745f5f
 2f6:	5f006e6f          	jal	x28,68e6 <__global_pointer$+0x5826>
 2fa:	7461                	c.lui	x8,0xffff8
	int x = 10;
 2fc:	7865                	c.lui	x16,0xffff9
 2fe:	7469                	c.lui	x8,0xffffa
 300:	7300                	c.flw	f8,32(x14)
 302:	6275                	c.lui	x4,0x1d
	bubble(arr, N);
 304:	6174706f          	jal	x0,4811a <_sp+0x3811a>
 308:	6772                	c.flwsp	f14,28(x2)
 30a:	5f00                	c.lw	x8,56(x14)
 30c:	735f 6964 6964      	0x69646964735f
 312:	696e                	c.flwsp	f18,216(x2)
 314:	0074                	c.addi4spn	x13,x2,12
 316:	6f5f 6666 745f      	0x745f66666f5f
	int result = binarySearch(arr, 0, N-1, x);
 31c:	5f00                	c.lw	x8,56(x14)
 31e:	7266                	c.flwsp	f4,120(x2)
 320:	6565                	c.lui	x10,0x19
 322:	696c                	c.flw	f11,84(x10)
 324:	5f007473          	csrrci	x8,0x5f0,0
 328:	4f4c                	c.lw	x11,28(x14)
 32a:	525f4b43          	fmadd.d	f22,f30,f5,f10,rmm
 32e:	4345                	c.li	x6,17
 330:	5255                	c.li	x4,-11
 332:	45564953          	0x45564953
 336:	545f 7500 736e      	0x736e7500545f
	int another_result = binarySearch(arr, 0, N-1,420);
 33c:	6769                	c.lui	x14,0x1a
 33e:	656e                	c.flwsp	f10,216(x2)
 340:	2064                	c.fld	f9,192(x8)
 342:	72616863          	bltu	x2,x6,a72 <_ebss+0x172>
 346:	5f00                	c.lw	x8,56(x14)
 348:	656e                	c.flwsp	f10,216(x2)
 34a:	685f0077          	0x685f0077
 34e:	655f 7272 6f6e      	0x6f6e7272655f
 354:	7300                	c.flw	f8,32(x14)
 356:	6f68                	c.flw	f10,92(x14)
	int larry = binarySearch(arr, 0, N-1,33); //larry
 358:	7472                	c.flwsp	f8,60(x2)
 35a:	6920                	c.flw	f8,80(x10)
 35c:	746e                	c.flwsp	f8,248(x2)
 35e:	5f00                	c.lw	x8,56(x14)
 360:	745f 5f6d 6479      	0x64795f6d745f
 366:	7961                	c.lui	x18,0xffff8
 368:	5f00                	c.lw	x8,56(x14)
 36a:	735f 7562 0066      	0x667562735f
 370:	695f 626f 0073      	0x73626f695f
 376:	5f5f 4946 454c      	0x454c49465f5f
	int goat = binarySearch(arr, 0, N-1,23); //mj or l3-6
 37c:	5f00                	c.lw	x8,56(x14)
 37e:	626d                	c.lui	x4,0x1b
 380:	74617473          	csrrci	x8,0x746,2
 384:	5f65                	c.li	x30,-7
 386:	0074                	c.addi4spn	x13,x2,12
 388:	5f5f 4673 4c49      	0x4c4946735f5f
 38e:	0045                	c.addi	x0,17
 390:	6d5f 7362 6174      	0x617473626d5f
 396:	6574                	c.flw	f13,76(x10)
	int brady = binarySearch(arr, 0, N-1,12);
 398:	5f00                	c.lw	x8,56(x14)
 39a:	6172                	c.flwsp	f2,28(x2)
 39c:	646e                	c.flwsp	f8,216(x2)
 39e:	6e5f 7865 0074      	0x7478656e5f
 3a4:	6d5f 6c62 6e65      	0x6e656c626d5f
 3aa:	735f 6174 6574      	0x65746174735f
 3b0:	5f00                	c.lw	x8,56(x14)
 3b2:	6e69                	c.lui	x28,0x1a
 3b4:	695f0063          	beq	x30,x21,a34 <_ebss+0x134>
	return 0; 
 3b8:	646e                	c.flwsp	f8,216(x2)
 3ba:	5f00                	c.lw	x8,56(x14)
} 
 3bc:	6f6c                	c.flw	f11,92(x14)
 3be:	656c6163          	bltu	x24,x22,a00 <_ebss+0x100>
 3c2:	5f00                	c.lw	x8,56(x14)
 3c4:	635f 656c 6e61      	0x6e61656c635f
 3ca:	7075                	c.lui	x0,0xffffd
 3cc:	5f00                	c.lw	x8,56(x14)
 3ce:	6e75                	c.lui	x28,0x1d
 3d0:	63657073          	csrrci	x0,0x636,10
 3d4:	6669                	c.lui	x12,0x1a
 3d6:	6569                	c.lui	x10,0x1a
 3d8:	5f64                	c.lw	x9,124(x14)
 3da:	6f6c                	c.flw	f11,92(x14)
 3dc:	656c6163          	bltu	x24,x22,a1e <_ebss+0x11e>
 3e0:	695f 666e 006f      	0x6f666e695f
 3e6:	6d5f 7861 6477      	0x647778616d5f
 3ec:	725f0073          	0x725f0073
 3f0:	6565                	c.lui	x10,0x19
 3f2:	746e                	c.flwsp	f8,248(x2)
 3f4:	5f00                	c.lw	x8,56(x14)
 3f6:	64656573          	csrrsi	x10,0x646,10
 3fa:	5f00                	c.lw	x8,56(x14)
 3fc:	635f 756f 746e      	0x746e756f635f
 402:	5f00                	c.lw	x8,56(x14)
 404:	765f 6c61 6575      	0x65756c61765f
 40a:	5f00                	c.lw	x8,56(x14)
 40c:	6b656573          	csrrsi	x10,0x6b6,10
 410:	5f00                	c.lw	x8,56(x14)
 412:	7066                	c.flwsp	f0,120(x2)
 414:	745f736f          	jal	x6,f8358 <_sp+0xe8358>
 418:	5f00                	c.lw	x8,56(x14)
 41a:	745f 5f6d 696d      	0x696d5f6d745f
 420:	006e                	c.slli	x0,0x1b
 422:	6d5f 6c75 0074      	0x746c756d5f
 428:	735f 7274 6f74      	0x6f747274735f
 42e:	616c5f6b          	0x616c5f6b
 432:	61007473          	csrrci	x8,0x610,0
 436:	6f6e                	c.flwsp	f30,216(x2)
 438:	6874                	c.flw	f13,84(x8)
 43a:	7265                	c.lui	x4,0xffff9
 43c:	725f 7365 6c75      	0x6c757365725f
 442:	0074                	c.addi4spn	x13,x2,12
 444:	665f 746e 7079      	0x7079746e665f
 44a:	7365                	c.lui	x6,0xffff9
 44c:	5f00                	c.lw	x8,56(x14)
 44e:	6461                	c.lui	x8,0x18
 450:	0064                	c.addi4spn	x9,x2,12
 452:	5f5f 4c55 6e6f      	0x6e6f4c555f5f
 458:	675f0067          	jalr	x0,1653(x30) # 19675 <_sp+0x9675>
 45c:	7465                	c.lui	x8,0xffff9
 45e:	6164                	c.flw	f9,68(x10)
 460:	6574                	c.flw	f13,76(x10)
 462:	655f 7272 6200      	0x62007272655f
 468:	6275                	c.lui	x4,0x1d
 46a:	6c62                	c.flwsp	f24,24(x2)
 46c:	0065                	c.addi	x0,25
 46e:	675f 6f6c 6162      	0x61626f6c675f
 474:	5f6c                	c.lw	x11,124(x14)
 476:	6d69                	c.lui	x26,0x1a
 478:	7570                	c.flw	f12,108(x10)
 47a:	6572                	c.flwsp	f10,28(x2)
 47c:	705f 7274 5f00      	0x5f007274705f
 482:	6e75                	c.lui	x28,0x1d
 484:	7375                	c.lui	x6,0xffffd
 486:	6465                	c.lui	x8,0x19
 488:	725f 6e61 0064      	0x646e61725f
 48e:	775f 7364 5f00      	0x5f007364775f
 494:	745f 5f6d 6477      	0x64775f6d745f
 49a:	7961                	c.lui	x18,0xffff8
 49c:	5f00                	c.lw	x8,56(x14)
 49e:	65756c67          	0x65756c67
 4a2:	5f00                	c.lw	x8,56(x14)
 4a4:	7a697373          	csrrci	x6,0x7a6,18
 4a8:	5f65                	c.li	x30,-7
 4aa:	0074                	c.addi4spn	x13,x2,12
 4ac:	6c5f 3436 5f61      	0x5f6134366c5f
 4b2:	7562                	c.flwsp	f10,56(x2)
 4b4:	0066                	c.slli	x0,0x19
 4b6:	735f 6769 665f      	0x665f6769735f
 4bc:	6e75                	c.lui	x28,0x1d
 4be:	6e5f0063          	beq	x30,x5,b9e <_ebss+0x29e>
 4c2:	7562                	c.flwsp	f10,56(x2)
 4c4:	0066                	c.slli	x0,0x19
 4c6:	755f 756e 6573      	0x6573756e755f
 4cc:	0064                	c.addi4spn	x9,x2,12
 4ce:	5f5f 6d74 695f      	0x695f6d745f5f
 4d4:	74736473          	csrrsi	x8,0x747,6
 4d8:	5f00                	c.lw	x8,56(x14)
 4da:	6f6c                	c.flw	f11,92(x14)
 4dc:	746c6163          	bltu	x24,x6,c1e <_ebss+0x31e>
 4e0:	6d69                	c.lui	x26,0x1a
 4e2:	5f65                	c.li	x30,-7
 4e4:	7562                	c.flwsp	f10,56(x2)
 4e6:	0066                	c.slli	x0,0x19
 4e8:	635f 6f6c 6573      	0x65736f6c635f
 4ee:	5f00                	c.lw	x8,56(x14)
 4f0:	3472                	c.fldsp	f8,312(x2)
 4f2:	0038                	c.addi4spn	x14,x2,8
 4f4:	6d5f 7462 776f      	0x776f74626d5f
 4fa:	74735f63          	bge	x6,x7,c58 <_ebss+0x358>
 4fe:	7461                	c.lui	x8,0xffff8
 500:	0065                	c.addi	x0,25
 502:	705f 7335 6d00      	0x6d007335705f
 508:	6961                	c.lui	x18,0x18
 50a:	006e                	c.slli	x0,0x1b
 50c:	5f5f 6d74 6d5f      	0x6d5f6d745f5f
 512:	6164                	c.flw	f9,68(x10)
 514:	0079                	c.addi	x0,30

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
	nop
   0:	ffff                	0xffff
   2:	ffff                	0xffff
	...
	la sp, _sp
   c:	0090                	c.addi4spn	x12,x2,64
   e:	0000                	c.unimp
  10:	00a0                	c.addi4spn	x8,x2,72
  12:	0000                	c.unimp
	mv s0, sp
  14:	00b4                	c.addi4spn	x13,x2,72
	...

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
	nop
   0:	000c                	0xc
   2:	0000                	c.unimp
	la ra, exit
   4:	ffff                	0xffff
   6:	ffff                	0xffff
   8:	7c010003          	lb	x0,1984(x2) # b0b081a <_sp+0xb0a081a>
	la sp, _sp
   c:	0d01                	c.addi	x26,0
   e:	0002                	c.slli64	x0
  10:	0020                	c.addi4spn	x8,x2,8
  12:	0000                	c.unimp
	mv s0, sp
  14:	0000                	c.unimp
  16:	0000                	c.unimp
	la gp, __global_pointer$
  18:	00b4                	c.addi4spn	x13,x2,72
  1a:	0000                	c.unimp
  1c:	00f8                	c.addi4spn	x14,x2,76
  1e:	0000                	c.unimp
	li tp, 0
  20:	0e44                	c.addi4spn	x9,x2,788
  22:	4430                	c.lw	x12,72(x8)
	li t0, 0
  24:	0188                	c.addi4spn	x10,x2,192
  26:	0c44                	c.addi4spn	x9,x2,532
	li t1, 0
  28:	0008                	0x8
  2a:	e402                	c.fswsp	f0,8(x2)
	li t2, 0
  2c:	0cc8                	c.addi4spn	x10,x2,596
  2e:	3002                	c.fldsp	f0,32(x2)
	li s1, 0
  30:	0e44                	c.addi4spn	x9,x2,788
  32:	0000                	c.unimp
	li a0, 0
  34:	0024                	c.addi4spn	x9,x2,8
  36:	0000                	c.unimp
	li a1, 0
  38:	0000                	c.unimp
  3a:	0000                	c.unimp
	li a2, 0
  3c:	01ac                	c.addi4spn	x11,x2,200
  3e:	0000                	c.unimp
	li a3, 0
  40:	00fc                	c.addi4spn	x15,x2,76
  42:	0000                	c.unimp
	li a4, 0
  44:	0e44                	c.addi4spn	x9,x2,788
  46:	4830                	c.lw	x12,80(x8)
	li a5, 0
  48:	0181                	c.addi	x3,0
  4a:	0288                	c.addi4spn	x10,x2,320
	li a6, 0
  4c:	0c44                	c.addi4spn	x9,x2,532
  4e:	0008                	0x8
	li a7, 0
  50:	e002                	c.fswsp	f0,0(x2)
  52:	44c1                	c.li	x9,16
	li s2, 0
  54:	0cc8                	c.addi4spn	x10,x2,596
  56:	3002                	c.fldsp	f0,32(x2)
	li s3, 0
  58:	0e44                	c.addi4spn	x9,x2,788
  5a:	0000                	c.unimp
	li s4, 0
  5c:	0028                	c.addi4spn	x10,x2,8
  5e:	0000                	c.unimp
	li s5, 0
  60:	0000                	c.unimp
  62:	0000                	c.unimp
	li s6, 0
  64:	02a8                	c.addi4spn	x10,x2,328
  66:	0000                	c.unimp
	li s7, 0
  68:	0128                	c.addi4spn	x10,x2,136
  6a:	0000                	c.unimp
	li s8, 0
  6c:	0e44                	c.addi4spn	x9,x2,788
  6e:	03c0                	c.addi4spn	x8,x2,452
	li s9, 0
  70:	8148                	0x8148
  72:	8801                	c.andi	x8,0
	li s10, 0
  74:	4402                	c.lwsp	x8,0(x2)
  76:	080c                	c.addi4spn	x11,x2,16
	li s11, 0
  78:	0300                	c.addi4spn	x8,x2,384
  7a:	010c                	c.addi4spn	x11,x2,128
	li t3, 0
  7c:	44c1                	c.li	x9,16
  7e:	0cc8                	c.addi4spn	x10,x2,596
	li t4, 0
  80:	c002                	c.swsp	x0,0(x2)
  82:	000e4403          	lbu	x8,0(x28) # 1d000 <_sp+0xd000>
	...
